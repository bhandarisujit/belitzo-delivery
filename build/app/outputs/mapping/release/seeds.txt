androidx.appcompat.view.menu.ListMenuItemView
androidx.fragment.app.DialogFragment
android.support.v4.media.AudioAttributesImplApi21Parcelizer
androidx.annotation.Keep
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
io.flutter.embedding.engine.FlutterJNI
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
me.zhanghai.android.materialprogressbar.R$bool
androidx.media.AudioAttributesImplApi21
com.dexterous.flutterlocalnotifications.models.Time
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation
androidx.viewpager2.adapter.FragmentStateAdapter$5
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory
android.support.v4.media.session.MediaSessionCompat$QueueItem
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.google.android.gms.common.api.Status
androidx.savedstate.Recreator
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation
androidx.window.embedding.SplitPairFilter
com.afollestad.materialdialogs.internal.MDButton
kotlin.internal.jdk7.JDK7PlatformImplementations
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver
androidx.appcompat.widget.ActionBarContextView
com.dexterous.flutterlocalnotifications.models.SoundSource
com.dexterous.flutterlocalnotifications.models.NotificationAction
androidx.media.AudioAttributesImplBaseParcelizer
androidx.window.embedding.SplitPairRule
androidx.window.R$styleable
androidx.window.layout.WindowInfoTrackerDecorator
me.zhanghai.android.materialprogressbar.R$anim
androidx.window.layout.DisplayCompatHelperApi17
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.fragment.app.Fragment$5
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.activity.ComponentActivity$4
io.flutter.plugins.imagepicker.ImagePickerFileProvider
androidx.window.layout.WindowLayoutInfo
androidx.lifecycle.Lifecycling$1
android.support.v4.media.RatingCompat
androidx.startup.InitializationProvider
com.google.android.material.transformation.ExpandableBehavior
me.zhanghai.android.materialprogressbar.MaterialProgressDrawable
androidx.core.widget.NestedScrollView
androidx.recyclerview.widget.RecyclerView
androidx.window.layout.SidecarCompat$DistinctElementCallback
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo
com.afollestad.materialdialogs.color.FillGridView
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
me.zhanghai.android.materialprogressbar.Interpolators$LINEAR
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable
androidx.window.R
androidx.appcompat.widget.ContentFrameLayout
com.google.firebase.components.ComponentRegistrar
androidx.media.AudioAttributesImplApi21Parcelizer
androidx.constraintlayout.widget.Barrier
me.zhanghai.android.materialprogressbar.R$attr
com.google.android.gms.common.api.internal.LifecycleCallback
com.google.android.gms.common.api.internal.zzd
com.google.firebase.iid.FirebaseInstanceId
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar
com.google.firebase.concurrent.ExecutorsRegistrar
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.google.android.material.timepicker.ChipTextInputComboView
com.google.android.material.button.MaterialButtonToggleGroup
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver
androidx.window.core.Version$bigInteger$2
me.zhanghai.android.materialprogressbar.BasePaintDrawable
com.google.android.material.datepicker.MaterialCalendarGridView
com.google.android.material.datepicker.MaterialTextInputPicker
com.google.firebase.iid.Registrar
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
androidx.window.layout.FoldingFeature
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.baseflow.geolocator.GeolocatorLocationService
androidx.window.embedding.SplitRule$Api30Impl
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
androidx.window.embedding.ActivityStack
androidx.window.core.Version
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.appcompat.widget.AppCompatCheckBox
com.google.android.gms.location.LocationRequest
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation
com.google.android.material.internal.NavigationMenuItemView
androidx.core.app.CoreComponentFactory
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.appcompat.widget.ViewStubCompat
androidx.window.layout.SidecarAdapter$Companion
androidx.window.embedding.SplitInfo
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable
me.zhanghai.android.materialprogressbar.MaterialProgressBar
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
com.google.firebase.messaging.FirebaseMessagingRegistrar
com.google.android.gms.location.LocationResult
com.google.android.gms.location.LocationAvailability
androidx.window.layout.SidecarCompat$FirstAttachAdapter
me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
android.support.v4.media.session.ParcelableVolumeInfo
androidx.emoji2.text.EmojiCompatInitializer$1
com.google.android.gms.maps.model.LatLngBounds
androidx.window.layout.WindowInfoTrackerImpl
androidx.core.graphics.drawable.IconCompat
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService
com.dexterous.flutterlocalnotifications.models.MessageDetails
androidx.versionedparcelable.ParcelImpl
com.google.android.material.snackbar.Snackbar$SnackbarLayout
me.zhanghai.android.materialprogressbar.internal.DrawableCompat
me.zhanghai.android.materialprogressbar.R$dimen
androidx.lifecycle.LegacySavedStateHandleController$1
com.google.android.gms.maps.model.LatLng
kotlinx.coroutines.internal.StackTraceRecoveryKt
androidx.activity.ComponentActivity$5
androidx.window.embedding.ActivityFilter
com.dexterous.flutterlocalnotifications.models.IconSource
androidx.window.layout.FoldingFeature$State
androidx.window.layout.SidecarCompat$TranslatingCallback
com.google.android.material.datepicker.MaterialDatePicker
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.android.material.textview.MaterialTextView
androidx.media.AudioAttributesCompatParcelizer
io.flutter.plugins.GeneratedPluginRegistrant
io.flutter.plugins.urllauncher.WebViewActivity
androidx.transition.FragmentTransitionSupport
androidx.window.core.Bounds
com.google.firebase.installations.FirebaseInstallationsRegistrar
androidx.fragment.app.FragmentManager$6
com.google.android.material.bottomsheet.BottomSheetBehavior
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
androidx.appcompat.widget.AppCompatRadioButton
androidx.window.layout.HardwareFoldingFeature$Type
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
com.google.android.material.button.MaterialButton
androidx.window.embedding.SplitPlaceholderRule
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$1
androidx.window.layout.WindowInfoTracker
androidx.window.layout.ExtensionInterfaceCompat
com.dexterous.flutterlocalnotifications.ActionBroadcastReceiver
androidx.recyclerview.widget.LinearLayoutManager
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
me.zhanghai.android.materialprogressbar.TintableDrawable
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
androidx.window.layout.HardwareFoldingFeature
androidx.window.layout.WindowInfoTrackerImpl$Companion
androidx.window.layout.SidecarCompat$Companion
androidx.appcompat.view.menu.ActionMenuItemView
com.google.android.gms.common.api.Scope
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
me.zhanghai.android.materialprogressbar.internal.ThemeUtils
androidx.window.layout.WindowMetricsCalculatorDecorator
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation
android.support.v4.media.session.PlaybackStateCompat
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.google.android.material.datepicker.MaterialCalendar
androidx.lifecycle.SavedStateHandleController
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.google.android.gms.common.internal.ReflectedParcelable
androidx.window.embedding.EmbeddingAdapter
com.google.firebase.messaging.FirebaseMessagingService
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X
com.google.android.gms.common.SupportErrorDialogFragment
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
com.google.android.material.appbar.AppBarLayout$BaseBehavior
me.zhanghai.android.materialprogressbar.BaseDrawable$1
androidx.window.layout.WindowMetrics
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable
androidx.window.layout.SidecarAdapter
com.google.firebase.provider.FirebaseInitProvider
androidx.core.app.RemoteActionCompatParcelizer
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.google.android.material.transformation.FabTransformationSheetBehavior
androidx.window.embedding.EmbeddingCompat
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
com.google.android.material.timepicker.ClockHandView
com.dexterous.flutterlocalnotifications.models.BitmapSource
androidx.recyclerview.widget.GridLayoutManager
androidx.window.layout.ActivityCompatHelperApi24
androidx.window.embedding.SplitController
androidx.window.embedding.SplitRuleParser
android.support.v4.media.MediaDescriptionCompat
kotlin.coroutines.jvm.internal.BaseContinuationImpl
androidx.lifecycle.ProcessLifecycleInitializer
androidx.window.layout.DisplayFeature
com.google.android.material.appbar.MaterialToolbar
com.google.android.material.textfield.TextInputLayout
androidx.appcompat.widget.FitWindowsLinearLayout
androidx.window.layout.SidecarCompat
com.google.firebase.FirebaseCommonRegistrar
com.google.firebase.datatransport.TransportRegistrar
com.afollestad.materialdialogs.internal.MDRootLayout
me.zhanghai.android.materialprogressbar.R$layout
android.support.v4.media.AudioAttributesCompatParcelizer
io.flutter.view.AccessibilityViewEmbedder
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
me.zhanghai.android.materialprogressbar.BaseDrawable
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable
android.support.v4.app.RemoteActionCompatParcelizer
androidx.appcompat.widget.ActionMenuView
me.zhanghai.android.materialprogressbar.R
com.dexterous.flutterlocalnotifications.utils.BooleanUtils
androidx.window.layout.WindowBackend
androidx.lifecycle.DefaultLifecycleObserver
com.google.android.gms.auth.api.signin.GoogleSignInAccount
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver
me.zhanghai.android.materialprogressbar.R$drawable
androidx.lifecycle.CompositeGeneratedAdaptersObserver
me.zhanghai.android.materialprogressbar.BaseProgressDrawable
me.zhanghai.android.materialprogressbar.R$integer
androidx.activity.result.ActivityResultRegistry$1
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X
androidx.emoji2.text.EmojiCompatInitializer
com.google.firebase.messaging.FirebaseMessaging
io.flutter.plugin.platform.SingleViewPresentation
kotlinx.coroutines.android.AndroidExceptionPreHandler
androidx.appcompat.widget.SearchView
com.google.android.material.transformation.FabTransformationBehavior
io.flutter.view.FlutterCallbackInformation
androidx.coordinatorlayout.widget.CoordinatorLayout
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_END
androidx.window.embedding.SplitRule
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService
androidx.window.embedding.ActivityRule
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_SCALE_X
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
me.zhanghai.android.materialprogressbar.R$style
androidx.recyclerview.widget.StaggeredGridLayoutManager
androidx.window.R$attr
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.google.android.material.transformation.FabTransformationScrimBehavior
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
androidx.appcompat.app.AlertController$RecycleListView
androidx.appcompat.widget.Toolbar
androidx.window.layout.WindowInfoTracker$Companion
androidx.window.layout.EmptyDecorator
androidx.appcompat.widget.ActionBarOverlayLayout
me.zhanghai.android.materialprogressbar.ShowBackgroundDrawable
androidx.constraintlayout.widget.ConstraintLayout
androidx.window.layout.HardwareFoldingFeature$Companion
me.zhanghai.android.materialprogressbar.R$color
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop
com.google.android.material.timepicker.ClockFaceView
androidx.window.embedding.EmbeddingTranslatingCallback
com.google.android.gms.common.api.GoogleApiActivity
androidx.window.layout.WindowMetricsCalculator
com.dexterous.flutterlocalnotifications.models.PersonDetails
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.window.layout.FoldingFeature$State$Companion
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
com.google.android.gms.maps.GoogleMapOptions
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
me.zhanghai.android.materialprogressbar.R$id
androidx.window.layout.ActivityCompatHelperApi30
androidx.media.AudioAttributesImpl
com.dexterous.flutterlocalnotifications.RepeatInterval
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction
com.google.android.material.snackbar.SnackbarContentLayout
kotlinx.coroutines.android.AndroidDispatcherFactory
me.zhanghai.android.materialprogressbar.R$string
android.support.v4.media.AudioAttributesImplApi26Parcelizer
android.support.v4.media.MediaMetadataCompat
androidx.core.app.RemoteActionCompat
androidx.window.embedding.SplitController$Companion
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_START
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
androidx.media.AudioAttributesCompat
de.mintware.barcode_scan.BarcodeScannerActivity
androidx.lifecycle.SavedStateHandleAttacher
androidx.lifecycle.SingleGeneratedAdapterObserver
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.google.android.material.internal.NavigationMenuView
androidx.window.layout.FoldingFeature$Orientation
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable
kotlin.internal.jdk8.JDK8PlatformImplementations
androidx.window.layout.HardwareFoldingFeature$Type$Companion
io.flutter.embedding.android.FlutterSplashView$SavedState
com.google.android.material.appbar.AppBarLayout$Behavior
me.zhanghai.android.materialprogressbar.Animators
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
de.belitzo.driver.BackgroundService
de.belitzo.driver.MainActivity
com.google.android.gms.common.util.DynamiteApi
androidx.window.layout.SidecarWindowBackend$Companion
androidx.activity.ImmLeaksCleaner
androidx.window.embedding.EmptyEmbeddingComponent
androidx.versionedparcelable.CustomVersionedParcelable
io.flutter.plugins.googlemaps.GoogleMapController
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.window.embedding.ExtensionEmbeddingBackend
com.google.android.gms.common.api.internal.BasePendingResult
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
com.dexterous.flutterlocalnotifications.models.NotificationDetails
androidx.window.embedding.SplitRule$LayoutDir
androidx.appcompat.view.menu.ExpandedMenuView
android.support.v4.media.session.PlaybackStateCompat$CustomAction
com.google.android.material.bottomappbar.BottomAppBar$Behavior
android.support.v4.media.MediaBrowserCompat$MediaItem
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency
androidx.window.embedding.EmbeddingRule
androidx.constraintlayout.widget.Guideline
androidx.window.embedding.EmbeddingInterfaceCompat
me.zhanghai.android.materialprogressbar.BuildConfig
androidx.lifecycle.FullLifecycleObserverAdapter
me.zhanghai.android.materialprogressbar.MaterialProgressBar$1
androidx.window.layout.ExtensionWindowLayoutInfoBackend
androidx.appcompat.widget.ButtonBarLayout
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
com.google.android.material.transformation.ExpandableTransformationBehavior
com.google.android.material.internal.CheckableImageButton
androidx.window.layout.SidecarWindowBackend
me.zhanghai.android.materialprogressbar.R$styleable
com.dexterous.flutterlocalnotifications.models.DateTimeComponents
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform
me.zhanghai.android.materialprogressbar.Interpolators
androidx.appcompat.widget.ActionBarContainer
com.google.android.material.behavior.SwipeDismissBehavior
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_SCALE_X
com.google.android.material.textfield.TextInputEditText
com.dexterous.flutterlocalnotifications.NotificationStyle
androidx.media.AudioAttributesImplBase
androidx.viewpager2.adapter.FragmentStateAdapter$2
androidx.window.core.Version$Companion
com.google.android.gms.common.GooglePlayServicesManifestException
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable
androidx.media.AudioAttributesImplApi26
androidx.activity.ComponentActivity$3
com.google.android.material.chip.ChipGroup
com.google.android.datatransport.cct.CctBackendFactory
android.support.v4.media.session.MediaSessionCompat$Token
com.google.android.material.timepicker.TimePickerView
androidx.appcompat.widget.AlertDialogLayout
androidx.appcompat.widget.DialogTitle
androidx.window.embedding.MatcherUtils
com.google.android.gms.maps.model.CameraPosition
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
de.mintware.barcode_scan.ChannelHandler
com.google.firebase.components.ComponentDiscoveryService
androidx.window.java.R
com.google.firebase.iid.FirebaseInstanceIdReceiver
com.google.android.gms.common.annotation.KeepName
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState
androidx.window.core.ExperimentalWindowApi
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable
androidx.window.embedding.EmbeddingCompat$Companion
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin
androidx.media.AudioAttributesImplApi26Parcelizer
com.google.android.material.theme.MaterialComponentsViewInflater
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase
android.support.v4.media.AudioAttributesImplBaseParcelizer
androidx.window.embedding.EmbeddingBackend
androidx.window.layout.DisplayCompatHelperApi28
androidx.window.layout.FoldingFeature$OcclusionType
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.google.android.material.internal.BaselineLayout
androidx.window.layout.WindowMetricsCalculator$Companion
me.zhanghai.android.materialprogressbar.CircularProgressDrawable
androidx.window.R$id
com.google.android.material.chip.Chip
com.dexterous.flutterlocalnotifications.utils.StringUtils
androidx.window.layout.FoldingFeature$OcclusionType$Companion
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: int mProgressIntrinsicHeight
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat
me.zhanghai.android.materialprogressbar.R$styleable: int RecycleListView_paddingBottomNoButtons
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActionMenuItemView
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_background_transition_holo_dark
androidx.window.core.Version: java.lang.String description
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowActionModeOverlay
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarStyle
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Body2
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean allowWhileIdle
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] $VALUES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_display_3_material
me.zhanghai.android.materialprogressbar.BuildConfig: boolean DEBUG
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: float START_ANGLE_MAX_NORMAL
me.zhanghai.android.materialprogressbar.R$id: int textSpacerNoTitle
me.zhanghai.android.materialprogressbar.R$attr: int windowActionModeOverlay
me.zhanghai.android.materialprogressbar.R$attr: int measureWithLargestChild
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Integer titleColor
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_BLUE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String METHOD_CHANNEL
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ButtonBar
me.zhanghai.android.materialprogressbar.MaterialProgressBar: boolean mSuperInitialized
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int PROGRESS_STYLE_HORIZONTAL
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_popupMenuStyle
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_display_1_material
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ButtonBar
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_closeItemLayout
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.String conversationTitle
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Small
me.zhanghai.android.materialprogressbar.R$style: int Widget_Compat_NotificationActionText
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PAYLOAD
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson gson
androidx.window.R$attr: int secondaryActivityAction
me.zhanghai.android.materialprogressbar.R$id: int shortcut
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
kotlinx.coroutines.DefaultExecutor: int debugStatus
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: android.graphics.RectF RECT_PROGRESS
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Display4
me.zhanghai.android.materialprogressbar.R$attr: int queryHint
me.zhanghai.android.materialprogressbar.R$attr: int spinnerDropDownItemStyle
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_progressBackgroundTint
me.zhanghai.android.materialprogressbar.R$id: int CTRL
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_secondaryProgressTint
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_numericModifiers
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasIndeterminateTint
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetLeft
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_toolbarStyle
me.zhanghai.android.materialprogressbar.R$id: int search_src_text
me.zhanghai.android.materialprogressbar.R$anim: int abc_shrink_fade_out_from_bottom
de.mintware.barcode_scan.Protos$ScanResult: int FORMAT_FIELD_NUMBER
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_secondaryProgressTintMode
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_OFF_MS
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_clear_material
me.zhanghai.android.materialprogressbar.R$id: int italic
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String START_FOREGROUND_SERVICE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
me.zhanghai.android.materialprogressbar.R$attr: int listPreferredItemHeight
me.zhanghai.android.materialprogressbar.R$dimen: int notification_top_pad_large_text
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean bot
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
me.zhanghai.android.materialprogressbar.R$drawable: int abc_spinner_textfield_background_material
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_SeekBar
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_customNavigationLayout
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_shadowColor
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String CANCEL_NOTIFICATION
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer audioAttributesUsage
de.mintware.barcode_scan.Protos$Configuration: com.google.protobuf.Parser PARSER
com.google.android.gms.location.LocationSettingsRequest: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_precise_anchor_extra_offset
kotlin.jvm.internal.FunctionReference: int flags
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean allowGeneratedReplies
me.zhanghai.android.materialprogressbar.R$styleable: int PopupWindowBackgroundState_state_above_anchor
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_NOTIFICATION
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ratingbar_indicator_material
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceSearchResultTitle
me.zhanghai.android.materialprogressbar.R$id: int dynamic
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
me.zhanghai.android.materialprogressbar.R$styleable: int ColorStateListItem_android_lStar
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String summaryText
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Spinner
me.zhanghai.android.materialprogressbar.R$attr: int textAllCaps
me.zhanghai.android.materialprogressbar.R$dimen: int notification_small_icon_size_as_large
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.StyleInformation styleInformation
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_autoSizePresetSizes
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.Time repeatTime
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_cut_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_ratingBarStyleSmall
androidx.window.core.Version: int minor
me.zhanghai.android.materialprogressbar.R$id: int action_menu_presenter
me.zhanghai.android.materialprogressbar.R$attr: int titleMargins
me.zhanghai.android.materialprogressbar.R$attr: int titleMarginEnd
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_METHOD
me.zhanghai.android.materialprogressbar.R$drawable: int abc_switch_track_mtrl_alpha
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatBigText
de.mintware.barcode_scan.Protos$Configuration: int ANDROID_FIELD_NUMBER
me.zhanghai.android.materialprogressbar.R$dimen: int abc_progress_bar_height_material
me.zhanghai.android.materialprogressbar.R$styleable: int CompoundButton_buttonCompat
me.zhanghai.android.materialprogressbar.R$attr: int editTextStyle
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND
me.zhanghai.android.materialprogressbar.R$id: int spacer
me.zhanghai.android.materialprogressbar.R$id: int expanded_menu
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
me.zhanghai.android.materialprogressbar.R$color: int material_blue_grey_800
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
me.zhanghai.android.materialprogressbar.R$id: int showCustom
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUTO_CANCEL
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.google.android.gms.maps.model.CircleOptions: android.os.Parcelable$Creator CREATOR
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
me.zhanghai.android.materialprogressbar.R$styleable: int[] FontFamilyFont
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionBar_TabBar
me.zhanghai.android.materialprogressbar.R$drawable: int abc_textfield_search_material
me.zhanghai.android.materialprogressbar.R$attr: int voiceIcon
me.zhanghai.android.materialprogressbar.R$dimen: int abc_button_inset_vertical_material
me.zhanghai.android.materialprogressbar.R$id: int SYM
androidx.window.embedding.SplitInfo: float splitRatio
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelId
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ProgressBar
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String summaryText
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_setBothDrawables
me.zhanghai.android.materialprogressbar.R$color: int dim_foreground_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_textAllCaps
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHORTCUT_ID
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorBackgroundFloating
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_progressTintMode
me.zhanghai.android.materialprogressbar.R$color: int primary_dark_material_light
me.zhanghai.android.materialprogressbar.R$attr: int buttonGravity
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg_normal
me.zhanghai.android.materialprogressbar.R$attr: int spinnerStyle
me.zhanghai.android.materialprogressbar.R$string: int abc_shareactionprovider_share_with_application
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_shadowDx
me.zhanghai.android.materialprogressbar.R$attr: int listPopupWindowStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_VIBRATION
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Body1
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_CALLBACK_HANDLE_METHOD
me.zhanghai.android.materialprogressbar.R$styleable: int[] DrawerArrowToggle
me.zhanghai.android.materialprogressbar.R$attr: int numericModifiers
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLATFORM_SPECIFICS
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_holo_dark
me.zhanghai.android.materialprogressbar.R$color: int ripple_material_light
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ICON
me.zhanghai.android.materialprogressbar.R$layout: int abc_dialog_title_material
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg_low_pressed
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_subtitleTextColor
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
me.zhanghai.android.materialprogressbar.R$dimen: int abc_button_padding_vertical_material
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
me.zhanghai.android.materialprogressbar.R$id: int action0
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetRight
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listDividerAlertDialog
me.zhanghai.android.materialprogressbar.R$dimen: int abc_panel_menu_list_width
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetEnd
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_normal_material_light
me.zhanghai.android.materialprogressbar.R$color: int button_material_dark
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_divider
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderPackage
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean important
de.mintware.barcode_scan.Protos$Configuration: com.google.protobuf.Internal$ListAdapter$Converter restrictFormat_converter_
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_END: android.view.animation.Interpolator INSTANCE
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
me.zhanghai.android.materialprogressbar.R$styleable: int[] AppCompatSeekBar
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String summaryText
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String REQUEST_PERMISSION_METHOD
me.zhanghai.android.materialprogressbar.R$layout: int abc_alert_dialog_button_bar_material
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ListPopupWindow
me.zhanghai.android.materialprogressbar.R$id: int action_menu_divider
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_part_chronometer
me.zhanghai.android.materialprogressbar.R$id: int action_bar_spinner
me.zhanghai.android.materialprogressbar.R$drawable: int abc_switch_thumb_material
me.zhanghai.android.materialprogressbar.R$attr: int buttonPanelSideLayout
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_activityChooserViewStyle
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_searchHintIcon
me.zhanghai.android.materialprogressbar.R$color: int primary_dark_material_dark
me.zhanghai.android.materialprogressbar.R$attr: int logo
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_big_media_custom
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Line2_Media
me.zhanghai.android.materialprogressbar.R$id: int line3
me.zhanghai.android.materialprogressbar.R$string: int abc_toolbar_collapse_description
com.google.android.gms.maps.model.PatternItem: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionBar_Solid
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ListPopupWindow
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_GREEN
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_min_width_minor
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: android.animation.Animator[] mAnimators
me.zhanghai.android.materialprogressbar.R$attr: int titleTextColor
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MAX_PROGRESS
me.zhanghai.android.materialprogressbar.R$attr: int seekBarStyle
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_arrowHeadLength
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_TextView_SpinnerItem
me.zhanghai.android.materialprogressbar.R$dimen: int notification_right_side_padding_top
me.zhanghai.android.materialprogressbar.R$layout: int abc_select_dialog_material
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabView
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_trackTintMode
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_Dialog
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_overflow_padding_start_material
me.zhanghai.android.materialprogressbar.R$anim: int abc_grow_fade_in_from_bottom
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatLines
me.zhanghai.android.materialprogressbar.R$id: int middle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorPrimary
me.zhanghai.android.materialprogressbar.R$id: int top
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_iconTintMode
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
de.mintware.barcode_scan.Protos$Configuration: de.mintware.barcode_scan.Protos$Configuration DEFAULT_INSTANCE
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Horizontal
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceListItemSmall
me.zhanghai.android.materialprogressbar.R$attr: int mpb_secondaryProgressTint
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_URI
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHRONOMETER_COUNT_DOWN
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String uri
de.mintware.barcode_scan.Protos$AndroidConfiguration: int ASPECTTOLERANCE_FIELD_NUMBER
me.zhanghai.android.materialprogressbar.R$styleable: int ViewStubCompat_android_inflatedId
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dropdownitem_text_padding_left
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String INPUTS
me.zhanghai.android.materialprogressbar.R$attr: int colorControlNormal
de.mintware.barcode_scan.Protos$AndroidConfiguration: com.google.protobuf.Parser PARSER
me.zhanghai.android.materialprogressbar.R$attr: int goIcon
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_EditText
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
me.zhanghai.android.materialprogressbar.R$id: int right_icon
me.zhanghai.android.materialprogressbar.R$layout: int abc_popup_menu_item_layout
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String body
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_menuCategory
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasProgressTintMode
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$id: int buttonPanel
androidx.window.core.Version: int major
me.zhanghai.android.materialprogressbar.R$id: int scrollView
me.zhanghai.android.materialprogressbar.R$id: int line1
me.zhanghai.android.materialprogressbar.R$attr: int actionModeWebSearchDrawable
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_radio_to_on_mtrl_015
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_NOTIFICATION
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_search_api_material
com.google.android.gms.location.zzac: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int[] ColorStateListItem
me.zhanghai.android.materialprogressbar.R$drawable: int abc_scrubber_track_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$attr: int actionModeCloseDrawable
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Display2
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer ledColor
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textFontWeight
androidx.window.embedding.ActivityStack: boolean isEmpty
me.zhanghai.android.materialprogressbar.R$id: int home
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$style: int Base_AlertDialog_AppCompat
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Media
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
me.zhanghai.android.materialprogressbar.R$drawable: int abc_seekbar_thumb_material
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.Boolean groupConversation
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
me.zhanghai.android.materialprogressbar.R$color: int dim_foreground_disabled_material_dark
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_subtitle_top_margin_material
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderQuery
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textSize
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ListView
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_NoActionBar
androidx.window.R$attr: int finishPrimaryWithSecondary
me.zhanghai.android.materialprogressbar.Interpolators$LINEAR: android.view.animation.Interpolator INSTANCE
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableVibration
me.zhanghai.android.materialprogressbar.R$attr: int alertDialogStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CALLED_AT
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_maxButtonHeight
me.zhanghai.android.materialprogressbar.R$color: int abc_background_cache_hint_selector_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int[] SwitchCompat
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_searchIcon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String shortcutId
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatSeekBar_tickMarkTintMode
me.zhanghai.android.materialprogressbar.R$attr: int showAsAction
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_TIME
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource bigPictureBitmapSource
me.zhanghai.android.materialprogressbar.R$styleable: int[] AppCompatTextView
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.PorterDuff$Mode mTintMode
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
me.zhanghai.android.materialprogressbar.R$style: int Base_V26_Widget_AppCompat_Toolbar
me.zhanghai.android.materialprogressbar.R$attr: int thickness
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_NoActionBar
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
de.mintware.barcode_scan.Protos$Configuration: int STRINGS_FIELD_NUMBER
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object bigPicture
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: float mTranslateX
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
me.zhanghai.android.materialprogressbar.R$dimen: int abc_list_item_padding_horizontal_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeCloseContentDescription
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionBar_TabText
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_fontWeight
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
me.zhanghai.android.materialprogressbar.R$dimen: int notification_right_icon_size
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_NAME
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_icon
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int action_mode_bar_stub
me.zhanghai.android.materialprogressbar.R$attr: int textColorAlertDialogListItem
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_DETAILS
me.zhanghai.android.materialprogressbar.R$styleable: int ColorStateListItem_android_alpha
me.zhanghai.android.materialprogressbar.R$attr: int controlBackground
me.zhanghai.android.materialprogressbar.R$color: int material_blue_grey_900
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listMenuViewStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUMMARY_TEXT
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_disabled_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int RecycleListView_paddingTopNoTitle
me.zhanghai.android.materialprogressbar.R$attr: int elevation
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_orderInCategory
me.zhanghai.android.materialprogressbar.R$styleable: int ViewStubCompat_android_id
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TICKER
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableLeftCompat
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_SeekBar
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer color
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_ALPHA
me.zhanghai.android.materialprogressbar.R$integer: int abc_config_activityShortDur
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATION_MESSAGING_STYLE_ERROR_CODE
me.zhanghai.android.materialprogressbar.R$dimen: int hint_alpha_material_dark
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg_low_normal
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dividerVertical
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderQuery
me.zhanghai.android.materialprogressbar.R$attr: int buttonTintMode
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
me.zhanghai.android.materialprogressbar.R$attr: int windowFixedHeightMajor
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer minute
me.zhanghai.android.materialprogressbar.R$color: int abc_search_url_text
me.zhanghai.android.materialprogressbar.R$id: int action_mode_bar
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction Update
androidx.window.embedding.SplitPairRule: boolean clearTop
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: float mStartAngleMax
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$dimen: int abc_seekbar_track_background_height_material
me.zhanghai.android.materialprogressbar.R$attr: int thumbTextPadding
com.google.android.gms.location.LastLocationRequest: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.BaseDrawable: me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState mConstantState
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_progressTint
me.zhanghai.android.materialprogressbar.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_android_gravity
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANCE
androidx.window.core.Version: int patch
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_backgroundSplit
me.zhanghai.android.materialprogressbar.R$attr: int autoSizeStepGranularity
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
me.zhanghai.android.materialprogressbar.R$attr: int textAppearancePopupMenuHeader
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.UnknownFieldSetLite unknownFields
kotlinx.coroutines.CancelledContinuation: int _resumed
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
me.zhanghai.android.materialprogressbar.R$attr: int titleMarginBottom
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int PROGRESS_STYLE_CIRCULAR
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_homeLayout
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_font
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarItemBackground
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActivityChooserView
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_Button
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_android_baselineAligned
me.zhanghai.android.materialprogressbar.BuildConfig: java.lang.String APPLICATION_ID
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_editTextColor
me.zhanghai.android.materialprogressbar.R$color: int abc_btn_colored_borderless_text_material
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_headline_material
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String sound
androidx.window.R$attr: int secondaryActivityName
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer importance
me.zhanghai.android.materialprogressbar.R$styleable: int View_theme
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_alertDialogStyle
me.zhanghai.android.materialprogressbar.R$styleable: int[] TextAppearance
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textColorSearchUrl
me.zhanghai.android.materialprogressbar.R$dimen: int hint_alpha_material_light
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_SCALE_X: android.view.animation.Interpolator INSTANCE
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents Time
me.zhanghai.android.materialprogressbar.R$styleable: int[] MenuView
kotlinx.coroutines.InvokeOnCancelling: int _invoked
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String ID
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_id
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ListMenuView
me.zhanghai.android.materialprogressbar.R$color: int material_deep_teal_500
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String key
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_itemIconDisabledAlpha
me.zhanghai.android.materialprogressbar.R$attr: int actionBarTabStyle
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_padding_top_material
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Display3
me.zhanghai.android.materialprogressbar.R$id: int withText
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_lineHeight
kotlin.jvm.internal.Lambda: int arity
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONGOING
me.zhanghai.android.materialprogressbar.R$styleable: int PopupWindow_android_popupAnimationStyle
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.graphics.PorterDuff$Mode mIndeterminateTintMode
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.google.android.gms.maps.model.LatLngBounds: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_GREEN
me.zhanghai.android.materialprogressbar.R$attr: int mpb_progressBackgroundTintMode
me.zhanghai.android.materialprogressbar.R$color: int primary_material_dark
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ListView
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActionBar
me.zhanghai.android.materialprogressbar.R$string: int abc_search_hint
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetEnd
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Display1
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_SeekBar_Discrete
me.zhanghai.android.materialprogressbar.R$attr: int preserveIconSpacing
me.zhanghai.android.materialprogressbar.R$styleable: int ViewBackgroundHelper_backgroundTint
me.zhanghai.android.materialprogressbar.R$attr: int actionModeFindDrawable
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String bigText
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_EditText
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_progressBackgroundTintMode
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map labelToSubtype
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_backgroundSplit
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeTheme
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Spinner_DropDown
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
me.zhanghai.android.materialprogressbar.MaterialProgressBar: me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo mProgressTintInfo
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_TEXT
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: int LEVEL_MAX
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int mProgressIntrinsicHeight
me.zhanghai.android.materialprogressbar.R$dimen: int abc_edit_text_inset_bottom_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_RED
me.zhanghai.android.materialprogressbar.R$dimen: int notification_subtext_size
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_NoPadding
androidx.window.R$attr: int finishSecondaryWithPrimary
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Title
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_custom_big
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textColorLink
me.zhanghai.android.materialprogressbar.BasePaintDrawable: android.graphics.Paint mPaint
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.protobuf.FieldSet extensions
me.zhanghai.android.materialprogressbar.R$attr: int popupTheme
me.zhanghai.android.materialprogressbar.R$attr: int buttonStyleSmall
me.zhanghai.android.materialprogressbar.R$id: int media_actions
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String payload
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
kotlin.jvm.internal.CallableReference: java.lang.String signature
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String CONTEXTUAL
me.zhanghai.android.materialprogressbar.R$anim: int abc_popup_exit
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
me.zhanghai.android.materialprogressbar.R$attr: int showDividers
de.mintware.barcode_scan.Protos$Configuration: de.mintware.barcode_scan.Protos$AndroidConfiguration android_
me.zhanghai.android.materialprogressbar.R$id: int action_divider
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String CHANNEL_ACTION
me.zhanghai.android.materialprogressbar.R$attr: int titleMarginStart
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_contentDescription
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionMenuTextAppearance
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Large
me.zhanghai.android.materialprogressbar.R$attr: int subtitle
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Medium_Inverse
me.zhanghai.android.materialprogressbar.R$dimen: int abc_button_padding_horizontal_material
me.zhanghai.android.materialprogressbar.R$dimen: int compat_button_inset_vertical_material
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Time_Media
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
me.zhanghai.android.materialprogressbar.R$anim: int abc_fade_in
me.zhanghai.android.materialprogressbar.R$id: int parentPanel
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataMimeType
me.zhanghai.android.materialprogressbar.R$attr: int buttonStyle
me.zhanghai.android.materialprogressbar.R$drawable: int notification_action_background
me.zhanghai.android.materialprogressbar.R$layout: int abc_screen_simple_overlay_action_mode
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_PopupMenu_Overflow
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_autoSizeTextType
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.window.embedding.ActivityRule: boolean alwaysExpand
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_edittext
me.zhanghai.android.materialprogressbar.R$attr: int mpb_determinateCircularProgressStyle
me.zhanghai.android.materialprogressbar.R$attr: int backgroundSplit
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showProgress
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button_Borderless_Colored
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Dialog_Alert
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowMinWidthMajor
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: android.graphics.RectF RECT_BOUND
me.zhanghai.android.materialprogressbar.R$dimen: int compat_button_inset_horizontal_material
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_media
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_LAUNCHED_APP
me.zhanghai.android.materialprogressbar.R$drawable: int abc_seekbar_tick_mark_material
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INITIALIZE_METHOD
me.zhanghai.android.materialprogressbar.R$attr: int state_above_anchor
me.zhanghai.android.materialprogressbar.R$styleable: int View_android_focusable
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarDivider
me.zhanghai.android.materialprogressbar.R$attr: int windowFixedHeightMinor
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetStartWithNavigation
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_pressed_holo_dark
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_button_min_height_material
me.zhanghai.android.materialprogressbar.R$attr: int backgroundTintMode
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.content.res.ColorStateList mSecondaryProgressTint
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataUri
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int mPaddedIntrinsicHeight
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DISPATCHER_HANDLE
me.zhanghai.android.materialprogressbar.R$color: int dim_foreground_material_dark
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
androidx.window.embedding.SplitRule: int minSmallestWidth
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer visibility
me.zhanghai.android.materialprogressbar.R$id: int action_mode_close_button
me.zhanghai.android.materialprogressbar.R$styleable: int CompoundButton_android_button
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowFixedHeightMajor
me.zhanghai.android.materialprogressbar.R$attr: int autoCompleteTextViewStyle
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
de.mintware.barcode_scan.Protos$AndroidConfiguration: double aspectTolerance_
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_queryHint
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long timeoutAfter
me.zhanghai.android.materialprogressbar.R$id: int status_bar_latest_event_content
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SET_AS_GROUP_SUMMARY
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_logo
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_navigationMode
me.zhanghai.android.materialprogressbar.R$id: int add
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_DarkActionBar
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_numericShortcut
me.zhanghai.android.materialprogressbar.R$attr: int commitIcon
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_subtitle_material_toolbar
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.content.res.ColorStateList mIndeterminateTint
me.zhanghai.android.materialprogressbar.R$anim: int abc_slide_out_top
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String VIBRATION_PATTERN
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
me.zhanghai.android.materialprogressbar.R$attr: int divider
me.zhanghai.android.materialprogressbar.R$color: int tooltip_background_dark
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
me.zhanghai.android.materialprogressbar.R$attr: int initialActivityCount
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button_Borderless
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval EveryMinute
me.zhanghai.android.materialprogressbar.R$color: int abc_hint_foreground_material_dark
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: boolean mShowBackground
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DAY
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatSeekBar_tickMark
me.zhanghai.android.materialprogressbar.R$dimen: int abc_seekbar_track_progress_height_material
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Media
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_PopupMenu
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean fullScreenIntent
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ID
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_menu_header_material
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Theme_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$attr: int mpb_secondaryProgressTintMode
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean chronometerCountDown
me.zhanghai.android.materialprogressbar.R$attr: int actionModeCutDrawable
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean channelShowBadge
me.zhanghai.android.materialprogressbar.R$id: int action_text
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.graphics.PorterDuff$Mode mProgressTintMode
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_android_fontVariationSettings
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_shadowDy
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
me.zhanghai.android.materialprogressbar.R$dimen: int notification_small_icon_background_padding
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_disabled_holo_light
me.zhanghai.android.materialprogressbar.BaseDrawable: android.content.res.ColorStateList mTintList
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_WEEKLY_AT_DAY_AND_TIME_METHOD
me.zhanghai.android.materialprogressbar.R$id: int search_badge
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_display_2_material
me.zhanghai.android.materialprogressbar.R$dimen: int abc_button_inset_horizontal_material
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource BitmapFilePath
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg_low
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonStyleSmall
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
me.zhanghai.android.materialprogressbar.R$attr: int actionMenuTextAppearance
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
me.zhanghai.android.materialprogressbar.R$color: int primary_text_disabled_material_light
me.zhanghai.android.materialprogressbar.R$dimen: int abc_cascading_menus_min_smallest_width
me.zhanghai.android.materialprogressbar.R$attr: int buttonBarNeutralButtonStyle
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionButton
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_multiChoiceItemLayout
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
me.zhanghai.android.materialprogressbar.R$attr: int actionBarWidgetTheme
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_fontFamily
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionButton_Overflow
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class baseType
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.NotificationStyle style
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_android_font
me.zhanghai.android.materialprogressbar.R$attr: int backgroundStacked
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_lines_media
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_viewInflaterClass
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
androidx.window.R$styleable: int[] ActivityFilter
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_showProgressBackground
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionBar_TabText
me.zhanghai.android.materialprogressbar.R$drawable: int abc_textfield_default_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetStart
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dialogTheme
me.zhanghai.android.materialprogressbar.R$styleable: int ColorStateListItem_lStar
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_determinateCircularProgressStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer id
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_button_min_width_material
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String description
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_switchPadding
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonStyle
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.Long timestamp
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.google.android.gms.maps.model.LatLng: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_android_textAppearance
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Dialog
me.zhanghai.android.materialprogressbar.R$attr: int actionViewClass
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_subtitleTextStyle
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: float mBackgroundAlpha
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_android_ttcIndex
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String sound
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textColor
me.zhanghai.android.materialprogressbar.R$color: int foreground_material_dark
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
me.zhanghai.android.materialprogressbar.R$attr: int logoDescription
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String STOP_FOREGROUND_SERVICE
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_android_weightSum
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_RatingBar
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.google.android.gms.maps.model.CameraPosition: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_ratingBarStyle
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_VIBRATION
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Subhead
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_checkedTextViewStyle
me.zhanghai.android.materialprogressbar.R$id: int submit_area
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_margin
me.zhanghai.android.materialprogressbar.R$color: int abc_btn_colored_text_material
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Small
me.zhanghai.android.materialprogressbar.R$attr: int mpb_indeterminateTintMode
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_DATE_TIME
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button_Small
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ab_share_pack_mtrl_alpha
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: float mTrimPathEnd
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledColor
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Activity mainActivity
de.mintware.barcode_scan.Protos$Configuration: int USECAMERA_FIELD_NUMBER
com.google.android.gms.internal.location.zzdb: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_PopupMenu
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_CompoundButton_CheckBox
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: int mPaddedIntrinsicHeight
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean mShowBackground
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarPopupTheme
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeFindDrawable
me.zhanghai.android.materialprogressbar.R$color: int abc_hint_foreground_material_light
me.zhanghai.android.materialprogressbar.R$attr: int homeAsUpIndicator
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLAY_SOUND
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_go_search_api_material
de.mintware.barcode_scan.Protos$AndroidConfiguration: int USEAUTOFOCUS_FIELD_NUMBER
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_searchViewStyle
me.zhanghai.android.materialprogressbar.R$id: int ifRoom
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_elevation_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_SHOW_BADGE
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionButton_CloseMode
me.zhanghai.android.materialprogressbar.R$attr: int displayOptions
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowFixedHeightMinor
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetRight
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONLY_ALERT_ONCE
me.zhanghai.android.materialprogressbar.R$id: int action_image
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
me.zhanghai.android.materialprogressbar.R$id: int tabMode
me.zhanghai.android.materialprogressbar.R$style: int Platform_ThemeOverlay_AppCompat_Dark
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PAYLOAD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: int[] additionalFlags
me.zhanghai.android.materialprogressbar.R$attr: int subtitleTextAppearance
me.zhanghai.android.materialprogressbar.R$styleable: int[] AlertDialog
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_default_height_material
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_trackTint
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] $VALUES
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
me.zhanghai.android.materialprogressbar.R$attr: int track
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_Dialog
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_mode_close_item_material
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_android_textOff
me.zhanghai.android.materialprogressbar.R$color: int material_grey_50
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_RatingBar_Small
me.zhanghai.android.materialprogressbar.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
me.zhanghai.android.materialprogressbar.R$color: int abc_primary_text_material_dark
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_Button
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_thumbTint
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_switchTextAppearance
me.zhanghai.android.materialprogressbar.R$style: int Base_Animation_AppCompat_Tooltip
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_android_layout
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_DropDownItem_Spinner
me.zhanghai.android.materialprogressbar.R$attr: int alertDialogButtonGroupStyle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatImageView_android_src
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOnMs
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_V21_Theme_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$color: int primary_text_default_material_light
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int PROGRESS_INTRINSIC_SIZE_DP
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_SCALE_X: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT1_SCALE_X
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Theme_AppCompat_Dialog
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Large_Inverse
me.zhanghai.android.materialprogressbar.R$color: int abc_secondary_text_material_dark
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform mRingPathTransform
me.zhanghai.android.materialprogressbar.R$style: int Animation_AppCompat_Tooltip
me.zhanghai.android.materialprogressbar.R$id: int customPanel
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_DRAWABLE_RESOURCE_ERROR_MESSAGE
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_listItemLayout
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
me.zhanghai.android.materialprogressbar.R$color: int abc_search_url_text_pressed
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigPicture
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_Dialog_Alert
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_list_padding_top_no_title
me.zhanghai.android.materialprogressbar.R$color: int highlighted_text_material_dark
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Large
me.zhanghai.android.materialprogressbar.R$color: int abc_primary_text_disable_only_material_dark
me.zhanghai.android.materialprogressbar.R$drawable: int abc_cab_background_top_material
me.zhanghai.android.materialprogressbar.R$attr: int tint
me.zhanghai.android.materialprogressbar.R$styleable: int[] ListPopupWindow
me.zhanghai.android.materialprogressbar.R$attr: int listPreferredItemPaddingRight
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
me.zhanghai.android.materialprogressbar.R$id: int action_container
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long when
androidx.window.core.Bounds: int bottom
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_check_to_on_mtrl_000
me.zhanghai.android.materialprogressbar.R$attr: int borderlessButtonStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_ALERT_BEHAVIOR
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_displayOptions
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_ALPHA
me.zhanghai.android.materialprogressbar.R$attr: int ratingBarStyle
me.zhanghai.android.materialprogressbar.R$attr: int fontStyle
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ACTION
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_arrow_drop_right_black_24dp
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_navigationIcon
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_visible
me.zhanghai.android.materialprogressbar.R$dimen: int notification_large_icon_height
me.zhanghai.android.materialprogressbar.R$attr: int thumbTintMode
me.zhanghai.android.materialprogressbar.R$attr: int actionBarItemBackground
me.zhanghai.android.materialprogressbar.R$drawable: int notification_template_icon_low_bg
me.zhanghai.android.materialprogressbar.R$drawable: int abc_textfield_activated_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$attr: int colorBackgroundFloating
me.zhanghai.android.materialprogressbar.R$attr: int radioButtonStyle
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_fixed_width_major
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String contentTitle
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: long[] vibrationPattern
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.List actions
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_overflow_material
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_android_textOn
me.zhanghai.android.materialprogressbar.R$attr: int autoSizeTextType
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ZONED_SCHEDULE_METHOD
androidx.window.R$attr: int activityName
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_big_media_narrow
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer hour
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_END: android.graphics.Path PATH_TRIM_PATH_END
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean ongoing
me.zhanghai.android.materialprogressbar.R$dimen: int highlight_alpha_material_dark
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionMenuTextColor
me.zhanghai.android.materialprogressbar.R$attr: int customNavigationLayout
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String id
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
androidx.window.embedding.SplitRule: float splitRatio
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemHeight
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ADDITIONAL_FLAGS
me.zhanghai.android.materialprogressbar.R$id: int actions
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowActionBarOverlay
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasProgressBackgroundTint
me.zhanghai.android.materialprogressbar.R$styleable: int CompoundButton_buttonTintMode
me.zhanghai.android.materialprogressbar.R$layout: int abc_expanded_menu_layout
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Large_NoPadding
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_layout
me.zhanghai.android.materialprogressbar.R$id: int normal
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
me.zhanghai.android.materialprogressbar.R$id: int src_in
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_background_transition_holo_light
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Toolbar
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean cancelNotification
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.google.android.gms.maps.model.MarkerOptions: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_showDividers
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_icon_vertical_padding_material
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_large_material
me.zhanghai.android.materialprogressbar.R$drawable: int abc_tab_indicator_material
me.zhanghai.android.materialprogressbar.R$attr: int showTitle
me.zhanghai.android.materialprogressbar.R$attr: int windowActionBar
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String USES_CHRONOMETER
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_menuCategory
me.zhanghai.android.materialprogressbar.R$attr: int colorAccent
androidx.window.R$attr: int clearTop
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_alphabeticModifiers
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_thumbTintMode
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarSize
me.zhanghai.android.materialprogressbar.R$attr: int dividerVertical
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean playSound
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
me.zhanghai.android.materialprogressbar.R$id: int end
androidx.window.R$id: int ltr
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
me.zhanghai.android.materialprogressbar.R$id: int circular
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT_TITLE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_enabled
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_visible
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_textLocale
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_btn_checkable
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_ALPHA
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Theme_AppCompat
me.zhanghai.android.materialprogressbar.R$attr: int dividerPadding
me.zhanghai.android.materialprogressbar.R$color: int notification_icon_bg_color
com.google.android.gms.maps.model.TileOverlayOptions: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int paddingEnd
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Small_Inverse
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_subtitleTextStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_GREEN
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
me.zhanghai.android.materialprogressbar.R$attr: int actionBarSplitStyle
androidx.window.layout.SidecarCompat: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$style: int Base_Animation_AppCompat_Dialog
me.zhanghai.android.materialprogressbar.R$id: int uniform
me.zhanghai.android.materialprogressbar.R$layout: int abc_screen_content_include
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map subtypeToLabel
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int actionDropDownStyle
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
com.dexterous.flutterlocalnotifications.models.PersonDetails: com.dexterous.flutterlocalnotifications.models.IconSource iconBitmapSource
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.lang.String LIBRARY_NAME
kotlinx.coroutines.CompletedExceptionally: int _handled
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String scheduledDateTime
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
me.zhanghai.android.materialprogressbar.R$attr: int backgroundTint
me.zhanghai.android.materialprogressbar.R$color: int background_floating_material_dark
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_RED
me.zhanghai.android.materialprogressbar.R$id: int action_bar_container
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_bar_up_container
me.zhanghai.android.materialprogressbar.R$attr: int mpb_progressBackgroundTint
me.zhanghai.android.materialprogressbar.R$styleable: int ViewStubCompat_android_layout
me.zhanghai.android.materialprogressbar.R$attr: int contentDescription
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableStartCompat
me.zhanghai.android.materialprogressbar.R$styleable: int[] PopupWindow
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
me.zhanghai.android.materialprogressbar.R$attr: int ratingBarStyleIndicator
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_Light
de.mintware.barcode_scan.Protos$ScanResult: int FORMATNOTE_FIELD_NUMBER
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATION_MESSAGING_STYLE_METHOD
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_typeface
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
me.zhanghai.android.materialprogressbar.R$id: int checkbox
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceListItem
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String contentTitle
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleTextColor
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableLeft
me.zhanghai.android.materialprogressbar.R$attr: int layout
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_pressed_holo_light
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Widget_AppCompat_EditText
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_indeterminateTintMode
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Medium
me.zhanghai.android.materialprogressbar.R$style: int Platform_AppCompat
me.zhanghai.android.materialprogressbar.R$integer: int abc_config_activityDefaultDur
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_listLayout
me.zhanghai.android.materialprogressbar.R$layout: int select_dialog_singlechoice_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PROGRESS
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_popupTheme
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String description
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState: me.zhanghai.android.materialprogressbar.BaseDrawable this$0
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_CompactMenu
me.zhanghai.android.materialprogressbar.R$attr: int tooltipForegroundColor
me.zhanghai.android.materialprogressbar.R$attr: int windowFixedWidthMajor
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Body2
me.zhanghai.android.materialprogressbar.R$id: int screen
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetRight
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_android_gravity
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
me.zhanghai.android.materialprogressbar.Animators: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
me.zhanghai.android.materialprogressbar.R$attr: int actionBarSize
me.zhanghai.android.materialprogressbar.R$color: int tooltip_background_light
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Menu
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionButton
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Medium
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] $VALUES
me.zhanghai.android.materialprogressbar.R$styleable: int[] MaterialProgressBar
me.zhanghai.android.materialprogressbar.R$dimen: int notification_action_icon_size
me.zhanghai.android.materialprogressbar.R$drawable: int abc_vector_test
me.zhanghai.android.materialprogressbar.R$id: int alertTitle
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_Dialog
androidx.window.embedding.ActivityRule: java.util.Set filters
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_alertDialogTheme
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_RatingBar_Indicator
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_panelMenuListTheme
me.zhanghai.android.materialprogressbar.R$dimen: int abc_control_inset_material
me.zhanghai.android.materialprogressbar.R$color: int abc_background_cache_hint_selector_material_dark
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_icon_group
me.zhanghai.android.materialprogressbar.R$color: int accent_material_light
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable mSecondaryProgressDrawable
kotlin.jvm.internal.CallableReference: java.lang.String name
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_material_dark
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
me.zhanghai.android.materialprogressbar.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
me.zhanghai.android.materialprogressbar.R$id: int radio
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeCopyDrawable
me.zhanghai.android.materialprogressbar.R$attr: int dialogPreferredPadding
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
me.zhanghai.android.materialprogressbar.R$styleable: int[] ViewBackgroundHelper
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetLeft
me.zhanghai.android.materialprogressbar.R$id: int always
me.zhanghai.android.materialprogressbar.R$color: int foreground_material_light
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_PopupMenu
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_y_offset_touch
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_BIG_PICTURE_ERROR_CODE
me.zhanghai.android.materialprogressbar.R$color: int ripple_material_dark
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionBar
me.zhanghai.android.materialprogressbar.R$dimen: int disabled_alpha_material_dark
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
me.zhanghai.android.materialprogressbar.R$attr: int allowStacking
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModePasteDrawable
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
me.zhanghai.android.materialprogressbar.R$style: int Platform_V21_AppCompat
me.zhanghai.android.materialprogressbar.R$attr: int toolbarNavigationButtonStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMESTAMP
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_SearchView
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_CompoundButton_RadioButton
androidx.window.R$styleable: int ActivityFilter_activityAction
me.zhanghai.android.materialprogressbar.R$id: int never
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.util.List actionInputs
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_title_material_toolbar
me.zhanghai.android.materialprogressbar.R$id: int scrollIndicatorUp
me.zhanghai.android.materialprogressbar.R$style: int Base_DialogWindowTitleBackground_AppCompat
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_CONVERSATION
me.zhanghai.android.materialprogressbar.R$dimen: int hint_pressed_alpha_material_dark
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionBar_TabView
me.zhanghai.android.materialprogressbar.R$attr: int expandActivityOverflowButtonDrawable
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
me.zhanghai.android.materialprogressbar.R$dimen: int abc_control_padding_material
me.zhanghai.android.materialprogressbar.R$attr: int suggestionRowLayout
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_fontVariationSettings
com.google.android.gms.internal.location.zzg: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int dialogTheme
me.zhanghai.android.materialprogressbar.R$id: int src_over
me.zhanghai.android.materialprogressbar.R$id: int META
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int multiChoiceItemLayout
me.zhanghai.android.materialprogressbar.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
me.zhanghai.android.materialprogressbar.R$styleable: int View_paddingStart
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
androidx.window.R$attr: int splitRatio
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: float SWEEP_ANGLE_MAX
me.zhanghai.android.materialprogressbar.R$attr: int actionModeCloseButtonStyle
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] $VALUES
me.zhanghai.android.materialprogressbar.R$attr: int arrowShaftLength
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_elevation
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_id
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean permissionRequestInProgress
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation: float mRotation
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.content.res.ColorStateList mProgressTint
me.zhanghai.android.materialprogressbar.R$drawable: int abc_cab_background_internal_bg
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Caption
com.google.android.gms.maps.model.MapStyleOptions: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int singleChoiceItemLayout
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Hourly
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_KEY
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_borderless_material
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionBar_TabView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelName
me.zhanghai.android.materialprogressbar.R$attr: int height
me.zhanghai.android.materialprogressbar.R$styleable: int[] AppCompatImageView
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionButtonStyle
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.PermissionRequestListener callback
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_METHOD
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderPackage
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHARED_PREFERENCES_KEY
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int NOTIFICATION_PERMISSION_REQUEST_CODE
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceSearchResultSubtitle
me.zhanghai.android.materialprogressbar.R$dimen: int compat_control_corner_material
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_menu_layout
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_ttcIndex
me.zhanghai.android.materialprogressbar.R$styleable: int CompoundButton_buttonTint
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Small
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DEFAULT_ICON
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActivityChooserView
me.zhanghai.android.materialprogressbar.R$attr: int queryBackground
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_seekBarStyle
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: boolean mShow
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
me.zhanghai.android.materialprogressbar.R$attr: int actionMenuTextColor
me.zhanghai.android.materialprogressbar.R$id: int scrollIndicatorDown
me.zhanghai.android.materialprogressbar.R$id: int edit_query
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMarginTop
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
me.zhanghai.android.materialprogressbar.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Object largeIcon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer number
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ByteArray
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Inverse
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable mBackgroundDrawable
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_android_maxWidth
me.zhanghai.android.materialprogressbar.R$style: int Widget_Compat_NotificationActionContainer
kotlin.jvm.internal.CallableReference: java.lang.Class owner
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
me.zhanghai.android.materialprogressbar.R$id: int action_bar
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_verticalDivider
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_android_windowIsFloating
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_part_time
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_check_to_on_mtrl_015
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
me.zhanghai.android.materialprogressbar.R$drawable: int abc_textfield_search_default_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$string: int abc_shareactionprovider_share_with
de.mintware.barcode_scan.Protos$Configuration: int useCamera_
me.zhanghai.android.materialprogressbar.R$id: int end_padder
me.zhanghai.android.materialprogressbar.R$drawable: int abc_edit_text_material
me.zhanghai.android.materialprogressbar.R$attr: int actionModeCopyDrawable
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ProgressBar_Horizontal
me.zhanghai.android.materialprogressbar.R$attr: int colorPrimary
me.zhanghai.android.materialprogressbar.R$drawable: int abc_dialog_material_background
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_inverse_material_light
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_Dark
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActionBarLayout
de.mintware.barcode_scan.Protos$Configuration: com.google.protobuf.Internal$IntList restrictFormat_
me.zhanghai.android.materialprogressbar.R$color: int primary_text_disabled_material_dark
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
me.zhanghai.android.materialprogressbar.R$id: int search_close_btn
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String PLAY_SOUND
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_switch_track
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NUMBER
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textColorHint
me.zhanghai.android.materialprogressbar.R$color: int secondary_text_disabled_material_dark
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_default_mtrl_shape
me.zhanghai.android.materialprogressbar.R$anim: int abc_popup_enter
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ratingbar_small_material
me.zhanghai.android.materialprogressbar.R$drawable: int abc_cab_background_top_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_drawableSize
me.zhanghai.android.materialprogressbar.R$attr: int switchTextAppearance
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg_normal_pressed
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String timeZoneName
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
me.zhanghai.android.materialprogressbar.R$integer: int config_tooltipAnimTime
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean indeterminate
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ListView_DropDown
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_MESSAGE
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
me.zhanghai.android.materialprogressbar.R$string: int search_menu_title
kotlinx.coroutines.JobSupport: java.lang.Object _state
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int mProgressIntrinsicSize
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_radio_material
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
com.google.android.gms.internal.location.zzdd: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$color: int material_deep_teal_200
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON_SOURCE
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_title
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUB_TEXT
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_ON_MS
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_RatingBar
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.content.res.ColorStateList mProgressBackgroundTint
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
me.zhanghai.android.materialprogressbar.R$dimen: int notification_big_circle_margin
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_ID
me.zhanghai.android.materialprogressbar.R$attr: int fontWeight
me.zhanghai.android.materialprogressbar.R$anim: int abc_slide_out_bottom
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation mRingRotation
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
me.zhanghai.android.materialprogressbar.BuildConfig: int VERSION_CODE
me.zhanghai.android.materialprogressbar.R$id: int info
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_switchStyle
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_content_inset_with_nav
me.zhanghai.android.materialprogressbar.R$id: int message
me.zhanghai.android.materialprogressbar.R$id: int search_mag_icon
me.zhanghai.android.materialprogressbar.R$dimen: int abc_select_dialog_padding_start_material
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ARE_NOTIFICATIONS_ENABLED_METHOD
me.zhanghai.android.materialprogressbar.R$attr: int gapBetweenBars
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer maxProgress
me.zhanghai.android.materialprogressbar.R$attr: int thumbTint
me.zhanghai.android.materialprogressbar.R$attr: int searchIcon
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INPUT_RESULT
me.zhanghai.android.materialprogressbar.R$id: int horizontal
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long millisecondsSinceEpoch
me.zhanghai.android.materialprogressbar.R$attr: int panelMenuListWidth
me.zhanghai.android.materialprogressbar.R$string: int abc_action_bar_home_description
me.zhanghai.android.materialprogressbar.R$attr: int mpb_progressTintMode
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: android.graphics.RectF RECT_PROGRESS
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERIODICALLY_SHOW_METHOD
me.zhanghai.android.materialprogressbar.R$styleable: int[] FontFamily
me.zhanghai.android.materialprogressbar.R$attr: int colorSwitchThumbNormal
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_INTERVAL
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dropDownListViewStyle
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowMinWidthMinor
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
me.zhanghai.android.materialprogressbar.R$dimen: int disabled_alpha_material_light
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_panelMenuListWidth
com.google.android.gms.maps.model.Cap: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.PorterDuffColorFilter mTintFilter
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String SHOWS_USER_INTERFACE
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] $VALUES
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBarLayout_android_layout_gravity
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_radio_to_on_mtrl_000
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANT
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERMISSION_REQUEST_IN_PROGRESS_ERROR_MESSAGE
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
me.zhanghai.android.materialprogressbar.R$attr: int dropDownListViewStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Body1
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int PADDED_INTRINSIC_HEIGHT_DP
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
de.mintware.barcode_scan.Protos$Configuration: com.google.protobuf.MapFieldLite strings_
me.zhanghai.android.materialprogressbar.R$attr: int paddingStart
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BODY
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource FlutterBitmapAsset
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarSplitStyle
me.zhanghai.android.materialprogressbar.R$color: int background_material_dark
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_popupTheme
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorAccent
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderAuthority
me.zhanghai.android.materialprogressbar.R$attr: int listPreferredItemHeightSmall
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONTENT_TITLE
me.zhanghai.android.materialprogressbar.R$attr: int indeterminateProgressStyle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
me.zhanghai.android.materialprogressbar.R$layout: int abc_popup_menu_header_item_layout
me.zhanghai.android.materialprogressbar.R$attr: int tooltipFrameBackground
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_Solid
me.zhanghai.android.materialprogressbar.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_navigationContentDescription
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LINES
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String tag
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_textAllCaps
de.mintware.barcode_scan.Protos$Configuration: boolean autoEnableFlash_
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorControlNormal
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_ALPHA
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int windowActionBarOverlay
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_default_padding_end_material
me.zhanghai.android.materialprogressbar.R$attr: int background
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: int LEVEL_MAX
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
me.zhanghai.android.materialprogressbar.BuildConfig: java.lang.String VERSION_NAME
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Daily
me.zhanghai.android.materialprogressbar.R$styleable: int[] ViewStubCompat
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_showAsAction
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_itemBackground
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarTabBarStyle
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetEndWithActions
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button_Borderless
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_BLUE
me.zhanghai.android.materialprogressbar.R$attr: int navigationContentDescription
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelDescription
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_android_minHeight
me.zhanghai.android.materialprogressbar.R$attr: int theme
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorControlActivated
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_fontVariationSettings
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_spinnerStyle
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean contextual
me.zhanghai.android.materialprogressbar.R$attr: int checkedTextViewStyle
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_body_2_material
me.zhanghai.android.materialprogressbar.R$dimen: int abc_config_prefDialogWidth
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderFetchStrategy
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ListView_Menu
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_METHOD
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionButton
me.zhanghai.android.materialprogressbar.R$layout: int abc_activity_chooser_view_list_item
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource FilePath
me.zhanghai.android.materialprogressbar.R$style: int Base_V22_Theme_AppCompat
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
com.google.android.gms.maps.model.PolylineOptions: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer day
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String groupId
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_title
me.zhanghai.android.materialprogressbar.R$color: int material_grey_300
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CALLBACK_HANDLE
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_commitIcon
me.zhanghai.android.materialprogressbar.R$attr: int mpb_progressTint
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Small_NoPadding
me.zhanghai.android.materialprogressbar.R$attr: int autoSizeMinTextSize
me.zhanghai.android.materialprogressbar.R$drawable: int abc_control_background_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatBody
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ticker
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$bool: int abc_config_actionMenuItemAllCaps
me.zhanghai.android.materialprogressbar.R$string: int status_bar_notification_info_overflow
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarTheme
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Spinner_Underlined
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
me.zhanghai.android.materialprogressbar.R$attr: int showText
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasIndeterminateTintMode
me.zhanghai.android.materialprogressbar.R$string: int abc_searchview_description_search
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
me.zhanghai.android.materialprogressbar.R$color: int material_grey_850
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ListView_Menu
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int DETERMINATE_CIRCULAR_PROGRESS_STYLE_NORMAL
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_collapseContentDescription
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DRAWABLE
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_SearchView
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_check_material
me.zhanghai.android.materialprogressbar.R$color: int abc_primary_text_disable_only_material_light
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ID
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_indeterminateTint
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
me.zhanghai.android.materialprogressbar.R$attr: int actionBarTheme
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
androidx.window.R$attr: int primaryActivityName
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
me.zhanghai.android.materialprogressbar.R$layout: int abc_list_menu_item_checkbox
me.zhanghai.android.materialprogressbar.R$drawable: int abc_textfield_search_activated_mtrl_alpha
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
me.zhanghai.android.materialprogressbar.R$attr: int tickMark
me.zhanghai.android.materialprogressbar.R$attr: int maxButtonHeight
me.zhanghai.android.materialprogressbar.R$dimen: int notification_content_margin_start
me.zhanghai.android.materialprogressbar.R$attr: int hideOnContentScroll
me.zhanghai.android.materialprogressbar.R$attr: int subMenuArrow
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
me.zhanghai.android.materialprogressbar.R$attr: int switchStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ID
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActivityChooserView
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
me.zhanghai.android.materialprogressbar.R$id: int SHIFT
me.zhanghai.android.materialprogressbar.R$attr: int fontFamily
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String WHEN
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceSmallPopupMenu
me.zhanghai.android.materialprogressbar.R$id: int icon_group
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_RatingBar_Small
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_progressStyle
me.zhanghai.android.materialprogressbar.R$styleable: int ButtonBarLayout_allowStacking
me.zhanghai.android.materialprogressbar.R$style: int Base_AlertDialog_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$style: int Platform_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_itemPadding
com.google.protobuf.GeneratedMessageLite: int memoizedSerializedSize
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
me.zhanghai.android.materialprogressbar.R$id: int showHome
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLORIZED
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeCutDrawable
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_subtitleTextAppearance
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$attr: int iconTint
androidx.window.R$styleable: int[] SplitPairFilter
me.zhanghai.android.materialprogressbar.R$attr: int overlapAnchor
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMarginEnd
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_DAILY_AT_TIME_METHOD
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
me.zhanghai.android.materialprogressbar.R$id: int homeAsUp
me.zhanghai.android.materialprogressbar.R$attr: int arrowHeadLength
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_LIGHTS
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
me.zhanghai.android.materialprogressbar.R$id: int search_button
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_imageButtonStyle
me.zhanghai.android.materialprogressbar.R$styleable: int[] AppCompatTextHelper
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderFetchTimeout
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
me.zhanghai.android.materialprogressbar.R$attr: int submitBackground
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_height
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_iconTint
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_color
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_alphabeticShortcut
me.zhanghai.android.materialprogressbar.R$attr: int drawerArrowStyle
com.google.android.gms.maps.model.PolygonOptions: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_iconifiedByDefault
me.zhanghai.android.materialprogressbar.R$id: int disableHome
me.zhanghai.android.materialprogressbar.R$id: int icon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MATCH_DATE_TIME_COMPONENTS
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_GROUP_METHOD
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Headline
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_CompoundButton_Switch
me.zhanghai.android.materialprogressbar.R$attr: int panelMenuListTheme
me.zhanghai.android.materialprogressbar.R$style: int Base_V23_Theme_AppCompat_Light
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean showsUserInterface
androidx.window.embedding.SplitPairRule: java.util.Set filters
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
me.zhanghai.android.materialprogressbar.R$color: int background_floating_material_light
me.zhanghai.android.materialprogressbar.R$dimen: int notification_action_text_size
me.zhanghai.android.materialprogressbar.R$attr: int windowNoTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long calledAt
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionMode
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_menu
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_onClick
me.zhanghai.android.materialprogressbar.R$style: int Base_V21_Theme_AppCompat
me.zhanghai.android.materialprogressbar.R$id: int action_bar_root
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PRIORITY
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND_SOURCE
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_body_1_material
me.zhanghai.android.materialprogressbar.R$style: int Base_Animation_AppCompat_DropDownUp
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_TITLE
me.zhanghai.android.materialprogressbar.R$attr: int titleMarginTop
me.zhanghai.android.materialprogressbar.R$anim: int abc_slide_in_bottom
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfWeekAndTime
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_headerBackground
me.zhanghai.android.materialprogressbar.R$id: int titleDividerNoCustom
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
me.zhanghai.android.materialprogressbar.BuildConfig: java.lang.String FLAVOR
me.zhanghai.android.materialprogressbar.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
me.zhanghai.android.materialprogressbar.R$dimen: int notification_media_narrow_margin
me.zhanghai.android.materialprogressbar.R$color: int abc_secondary_text_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_title
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_ICON_ERROR_CODE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PENDING_NOTIFICATION_REQUESTS_METHOD
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_panelBackground
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOffMs
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.graphics.PorterDuff$Mode mProgressBackgroundTintMode
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_caption_material
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarTabStyle
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer second
me.zhanghai.android.materialprogressbar.R$styleable: int PopupWindow_android_popupBackground
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String contentTitle
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat
me.zhanghai.android.materialprogressbar.R$attr: int spinBars
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_actionProviderClass
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderCerts
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_normal_material_dark
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableBottomCompat
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dividerHorizontal
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_emojiCompatEnabled
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat
me.zhanghai.android.materialprogressbar.R$drawable: int notification_tile_bg
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: float START_ANGLE_MAX_DYNAMIC
me.zhanghai.android.materialprogressbar.R$layout: int abc_activity_chooser_view
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabText
me.zhanghai.android.materialprogressbar.R$dimen: int highlight_alpha_material_colored
me.zhanghai.android.materialprogressbar.R$attr: int closeIcon
me.zhanghai.android.materialprogressbar.R$attr: int actionModeShareDrawable
me.zhanghai.android.materialprogressbar.R$attr: int collapseContentDescription
de.mintware.barcode_scan.Protos$AndroidConfiguration: de.mintware.barcode_scan.Protos$AndroidConfiguration DEFAULT_INSTANCE
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
me.zhanghai.android.materialprogressbar.R$color: int secondary_text_default_material_light
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String name
me.zhanghai.android.materialprogressbar.R$color: int secondary_text_disabled_material_light
me.zhanghai.android.materialprogressbar.R$attr: int colorError
me.zhanghai.android.materialprogressbar.R$color: int button_material_light
me.zhanghai.android.materialprogressbar.R$attr: int panelBackground
me.zhanghai.android.materialprogressbar.R$attr: int popupMenuStyle
me.zhanghai.android.materialprogressbar.R$attr: int actionOverflowMenuStyle
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_buttonPanelSideLayout
me.zhanghai.android.materialprogressbar.R$styleable: int[] SearchView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_MIME_TYPE
me.zhanghai.android.materialprogressbar.R$attr: int alertDialogTheme
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$style: int Base_V22_Theme_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_showText
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_fixed_width_minor
me.zhanghai.android.materialprogressbar.R$layout: int notification_media_cancel_action
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_START: android.graphics.Path PATH_TRIM_PATH_START
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
me.zhanghai.android.materialprogressbar.R$id: int right_side
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableVibration
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMenuItemView_android_minWidth
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
me.zhanghai.android.materialprogressbar.R$drawable: int abc_tab_indicator_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Spinner_Underlined
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Display2
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_default_padding_start_material
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_METHOD
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_SearchView_ActionBar
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Display4
me.zhanghai.android.materialprogressbar.R$style: int Platform_Widget_AppCompat_Spinner
me.zhanghai.android.materialprogressbar.R$id: int wrap_content
me.zhanghai.android.materialprogressbar.R$attr: int listLayout
androidx.window.R$id: int locale
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_progressBarStyle
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_submitBackground
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_SOUND_ERROR_CODE
me.zhanghai.android.materialprogressbar.R$attr: int colorControlHighlight
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
androidx.window.R$styleable: int[] SplitPlaceholderRule
androidx.window.R$attr: int activityAction
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_Dark
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_default
me.zhanghai.android.materialprogressbar.Animators: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT2_SCALE_X
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String MINUTE
me.zhanghai.android.materialprogressbar.R$attr: int colorPrimaryDark
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_display_4_material
me.zhanghai.android.materialprogressbar.R$attr: int listPreferredItemHeightLarge
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_button_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String INDETERMINATE
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Dialog
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_height
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String title
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer iconResourceId
me.zhanghai.android.materialprogressbar.R$id: int text
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableTopCompat
me.zhanghai.android.materialprogressbar.R$styleable: int View_paddingEnd
me.zhanghai.android.materialprogressbar.R$attr: int title
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X: android.view.animation.Interpolator INSTANCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
me.zhanghai.android.materialprogressbar.R$id: int action_bar_subtitle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_button_min_width_overflow_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatImageView_tint
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Title_Media
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String SECOND
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX mRect2TransformX
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_DarkActionBar
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ratingbar_material
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_METHOD
me.zhanghai.android.materialprogressbar.R$attr: int dropdownListPreferredItemHeight
me.zhanghai.android.materialprogressbar.R$attr: int buttonBarNegativeButtonStyle
me.zhanghai.android.materialprogressbar.R$attr: int searchHintIcon
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActivityChooserView
me.zhanghai.android.materialprogressbar.R$styleable: int ColorStateListItem_alpha
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
me.zhanghai.android.materialprogressbar.R$attr: int icon
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_holo_light
me.zhanghai.android.materialprogressbar.R$attr: int buttonBarButtonStyle
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
androidx.window.R$styleable: int SplitPairRule_clearTop
me.zhanghai.android.materialprogressbar.R$id: int custom
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowActionBar
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_disabled_material_light
me.zhanghai.android.materialprogressbar.R$attr: int tickMarkTintMode
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_thickness
me.zhanghai.android.materialprogressbar.R$attr: int itemPadding
androidx.window.core.Bounds: int right
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PERSON
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer importance
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
de.mintware.barcode_scan.Protos$Configuration: int AUTOENABLEFLASH_FIELD_NUMBER
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceLargePopupMenu
me.zhanghai.android.materialprogressbar.R$attr: int mpb_indeterminateTint
me.zhanghai.android.materialprogressbar.R$style: int Platform_ThemeOverlay_AppCompat_Light
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_longpressed_holo
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_stacked_max_height
me.zhanghai.android.materialprogressbar.R$attr: int subtitleTextStyle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_fontStyle
me.zhanghai.android.materialprogressbar.R$attr: int colorButtonNormal
me.zhanghai.android.materialprogressbar.R$styleable: int PopupWindow_overlapAnchor
me.zhanghai.android.materialprogressbar.R$drawable: int notification_icon_background
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: float mTrimPathOffset
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeBackground
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_voiceIcon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean playSound
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: int PROGRESS_INTRINSIC_HEIGHT_DP
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean showBadge
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
me.zhanghai.android.materialprogressbar.R$attr: int alphabeticModifiers
me.zhanghai.android.materialprogressbar.R$string: int abc_searchview_description_voice
me.zhanghai.android.materialprogressbar.R$dimen: int notification_large_icon_width
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_inverse_material_dark
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
me.zhanghai.android.materialprogressbar.R$id: int notification_background
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
kotlinx.coroutines.channels.ArrayChannel: int size
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_subtitle
com.google.android.gms.internal.location.zzd: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$color: int notification_material_background_media_default_color
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dialogCornerRadius
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_PROGRESS
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
me.zhanghai.android.materialprogressbar.R$color: int abc_search_url_text_selected
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_APP_LAUNCH_DETAILS_METHOD
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableRightCompat
me.zhanghai.android.materialprogressbar.R$dimen: int abc_search_view_preferred_height
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_menu_item_layout
me.zhanghai.android.materialprogressbar.R$attr: int tooltipText
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarTabTextStyle
me.zhanghai.android.materialprogressbar.Animators: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT1_SCALE_X
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dialogPreferredPadding
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
me.zhanghai.android.materialprogressbar.R$color: int material_grey_100
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeSplitBackground
me.zhanghai.android.materialprogressbar.R$color: int dim_foreground_disabled_material_light
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
me.zhanghai.android.materialprogressbar.R$attr: int buttonTint
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_fixed_height_minor
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatContentTitle
me.zhanghai.android.materialprogressbar.R$dimen: int hint_pressed_alpha_material_light
me.zhanghai.android.materialprogressbar.R$id: int collapseActionView
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String icon
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderFetchStrategy
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_NoActionBar
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_useIntrinsicPadding
me.zhanghai.android.materialprogressbar.R$style: int Animation_AppCompat_DropDownUp
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMargins
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Button
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
me.zhanghai.android.materialprogressbar.R$styleable: int Spinner_popupTheme
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_BLUE
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_defaultQueryHint
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.graphics.PorterDuff$Mode mSecondaryProgressTintMode
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Info
me.zhanghai.android.materialprogressbar.R$style: int Platform_V25_AppCompat
me.zhanghai.android.materialprogressbar.R$layout: int notification_action_tombstone
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ContentUri
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource Uri
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionBar_Solid
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
de.mintware.barcode_scan.Protos$ScanResult: com.google.protobuf.Parser PARSER
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_title_material
androidx.window.embedding.SplitController: boolean sDebug
me.zhanghai.android.materialprogressbar.R$attr: int isLightTheme
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String UNSUPPORTED_OS_VERSION_ERROR_CODE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
me.zhanghai.android.materialprogressbar.R$layout: int abc_list_menu_item_icon
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_controlBackground
me.zhanghai.android.materialprogressbar.Animators: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatImageView_srcCompat
me.zhanghai.android.materialprogressbar.R$color: int abc_color_highlight_material
me.zhanghai.android.materialprogressbar.R$string: int abc_searchview_description_query
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_DialogWhenLarge
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_stacked_tab_max_width
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_hideOnContentScroll
me.zhanghai.android.materialprogressbar.R$attr: int activityChooserViewStyle
me.zhanghai.android.materialprogressbar.R$drawable: int abc_scrubber_primary_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_ActionBar
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_checkableBehavior
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_showTitle
me.zhanghai.android.materialprogressbar.R$string: int abc_action_menu_overflow_description
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_textAppearance
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_enabled
me.zhanghai.android.materialprogressbar.R$id: int FUNCTION
me.zhanghai.android.materialprogressbar.R$integer: int cancel_button_image_alpha
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer priority
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
de.mintware.barcode_scan.Protos$Configuration: int RESTRICTFORMAT_FIELD_NUMBER
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
de.mintware.barcode_scan.Protos$AndroidConfiguration: boolean useAutoFocus_
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_progressBarPadding
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasSecondaryProgressTintMode
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String NAME
de.mintware.barcode_scan.Protos$ScanResult: int TYPE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String icon
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_orderInCategory
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON_BITMAP_SOURCE
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Large
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
me.zhanghai.android.materialprogressbar.R$id: int progress_circular
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
me.zhanghai.android.materialprogressbar.R$anim: int abc_fade_out
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Button
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String FULL_SCREEN_INTENT
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatContentTitle
me.zhanghai.android.materialprogressbar.R$string: int abc_searchview_description_submit
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String GROUP_ID
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String typeFieldName
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_menu_material
me.zhanghai.android.materialprogressbar.R$id: int notification_main_column
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: int NUM_POINTS
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_MESSAGE
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Inverse
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_titleTextStyle
me.zhanghai.android.materialprogressbar.R$id: int action_bar_activity_content
me.zhanghai.android.materialprogressbar.R$drawable: int abc_seekbar_track_material
me.zhanghai.android.materialprogressbar.R$attr: int listPreferredItemPaddingLeft
me.zhanghai.android.materialprogressbar.R$dimen: int abc_edit_text_inset_horizontal_material
com.google.android.gms.internal.location.zzdf: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_disabled_material_dark
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_actionViewClass
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE_INFORMATION
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMarginStart
me.zhanghai.android.materialprogressbar.R$id: int action_bar_title
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_RESPONSE_TYPE
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction CreateIfNotExists
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND_SOURCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ID
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$id: int time
me.zhanghai.android.materialprogressbar.R$styleable: int ViewBackgroundHelper_backgroundTintMode
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
me.zhanghai.android.materialprogressbar.R$styleable: int Spinner_android_popupBackground
me.zhanghai.android.materialprogressbar.R$id: int text2
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
me.zhanghai.android.materialprogressbar.R$style: int Base_V23_Theme_AppCompat
me.zhanghai.android.materialprogressbar.R$id: int decor_content_parent
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_tooltipFrameBackground
me.zhanghai.android.materialprogressbar.R$drawable: int abc_item_background_holo_light
me.zhanghai.android.materialprogressbar.R$id: int ALT
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_checkboxStyle
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_GROUP_METHOD
me.zhanghai.android.materialprogressbar.R$attr: int titleMargin
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatImageView_tintMode
me.zhanghai.android.materialprogressbar.R$drawable: int abc_action_bar_item_background_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeCloseDrawable
me.zhanghai.android.materialprogressbar.R$id: int chronometer
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_editTextBackground
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VISIBILITY
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ICON_SOURCE
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_material_light
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: float mScaleX
me.zhanghai.android.materialprogressbar.R$dimen: int notification_top_pad
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Tooltip
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowFixedWidthMinor
me.zhanghai.android.materialprogressbar.R$styleable: int[] ButtonBarLayout
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_editTextStyle
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_RAW_RESOURCE_ERROR_MESSAGE
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] $VALUES
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Display3
me.zhanghai.android.materialprogressbar.R$id: int contentPanel
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DialogWhenLarge
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ListView_DropDown
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ImageButton
me.zhanghai.android.materialprogressbar.R$styleable: int[] AppCompatTheme
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int PROGRESS_INTRINSIC_HEIGHT_DP
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
androidx.window.R$attr: int splitLayoutDirection
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetEndWithActions
me.zhanghai.android.materialprogressbar.R$styleable: int[] LinearLayoutCompat_Layout
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SHOW_BADGE
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String subText
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int searchViewStyle
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String id
me.zhanghai.android.materialprogressbar.R$layout: int abc_list_menu_item_radio
me.zhanghai.android.materialprogressbar.R$color: int abc_primary_text_material_light
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button
me.zhanghai.android.materialprogressbar.R$id: int listMode
me.zhanghai.android.materialprogressbar.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
me.zhanghai.android.materialprogressbar.R$styleable: int ColorStateListItem_android_color
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LARGE_ICON_ERROR_CODE
me.zhanghai.android.materialprogressbar.R$id: int search_edit_frame
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_WHEN
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderSystemFontFamily
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableLights
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.util.ArrayList lines
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X
androidx.window.R$id: int rtl
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_spinner
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar
me.zhanghai.android.materialprogressbar.R$layout: int abc_list_menu_item_layout
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_Dialog
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ALLOW_GENERATED_REPLIES
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_logoDescription
me.zhanghai.android.materialprogressbar.R$attr: int buttonBarPositiveButtonStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String KEY
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_singleChoiceItemLayout
me.zhanghai.android.materialprogressbar.R$dimen: int abc_search_view_preferred_width
me.zhanghai.android.materialprogressbar.BuildConfig: java.lang.String BUILD_TYPE
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.google.android.gms.maps.model.VisibleRegion: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMargin
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
me.zhanghai.android.materialprogressbar.R$drawable: int notification_template_icon_bg
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String DESCRIPTION
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_tooltipForegroundColor
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ListMenuView
me.zhanghai.android.materialprogressbar.R$id: int search_bar
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableTint
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Horizontal_NoPadding
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Info_Media
me.zhanghai.android.materialprogressbar.R$attr: int navigationIcon
me.zhanghai.android.materialprogressbar.R$attr: int paddingTopNoTitle
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
androidx.window.R$attr: int splitMinSmallestWidth
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE_BITMAP_SOURCE
me.zhanghai.android.materialprogressbar.R$id: int src_atop
me.zhanghai.android.materialprogressbar.R$color: int abc_search_url_text_normal
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionDropDownStyle
me.zhanghai.android.materialprogressbar.R$layout: int abc_search_view
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.util.ArrayList messages
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_horizontalDivider
me.zhanghai.android.materialprogressbar.R$attr: int font
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Headline
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
me.zhanghai.android.materialprogressbar.R$attr: int listItemLayout
com.google.protobuf.AbstractMessageLite: int memoizedHashCode
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] $VALUES
me.zhanghai.android.materialprogressbar.R$attr: int actionModeSplitBackground
me.zhanghai.android.materialprogressbar.R$attr: int tickMarkTint
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: io.flutter.plugin.common.MethodChannel channel
me.zhanghai.android.materialprogressbar.R$color: int primary_material_light
me.zhanghai.android.materialprogressbar.R$style: int Base_V21_Theme_AppCompat_Dialog
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String id
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
me.zhanghai.android.materialprogressbar.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
me.zhanghai.android.materialprogressbar.R$drawable: int abc_popup_background_mtrl_mult
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_alertDialogCenterButtons
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_divider_mtrl_alpha
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
me.zhanghai.android.materialprogressbar.R$id: int none
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean autoCancel
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
me.zhanghai.android.materialprogressbar.R$layout: int support_simple_spinner_dropdown_item
com.google.android.gms.maps.model.Tile: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_NOTIFICATION_REPEAT_FREQUENCY
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int image
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MESSAGES
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
me.zhanghai.android.materialprogressbar.R$string: int abc_activitychooserview_choose_application
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMEOUT_AFTER
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_subtitle
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetStart
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_tooltipText
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetLeft
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_android_inputType
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean onlyAlertOnce
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: float mTrimPathStart
androidx.window.R$attr: int splitMinWidth
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_corner_radius
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: com.dexterous.flutterlocalnotifications.models.PersonDetails person
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_buttonGravity
androidx.window.layout.SidecarAdapter: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$anim: int abc_slide_in_top
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: boolean mShowBackground
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int up
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_padding_material
me.zhanghai.android.materialprogressbar.R$attr: int trackTint
me.zhanghai.android.materialprogressbar.R$style: int AlertDialog_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_switchMinWidth
me.zhanghai.android.materialprogressbar.R$string: int abc_searchview_description_clear
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String title
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
me.zhanghai.android.materialprogressbar.R$styleable: int Spinner_android_entries
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: int PADDED_INTRINSIC_HEIGHT_DP
me.zhanghai.android.materialprogressbar.R$attr: int autoSizeMaxTextSize
me.zhanghai.android.materialprogressbar.R$styleable: int[] MenuItem
me.zhanghai.android.materialprogressbar.R$attr: int actionBarTabTextStyle
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_fontFamily
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonBarStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer progress
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatSummaryText
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_preserveIconSpacing
kotlinx.coroutines.CancellableContinuationImpl: int _decision
me.zhanghai.android.materialprogressbar.R$attr: int imageButtonStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VIBRATION_PATTERN
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
androidx.window.R$styleable: int ActivityFilter_activityName
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.google.android.gms.maps.model.StrokeStyle: android.os.Parcelable$Creator CREATOR
com.google.android.gms.maps.model.StampStyle: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int search_plate
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_windowAnimationStyle
kotlin.jvm.internal.FunctionReference: int arity
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatSummaryText
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasProgressBackgroundTintMode
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_splitTrack
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable mProgressDrawable
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_title_divider_material
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_shadowRadius
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_android_fontWeight
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_PopupWindow
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceListItem
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableLights
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Line2
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_RED
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_ab_back_material
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_background
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_material_light
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
me.zhanghai.android.materialprogressbar.R$color: int notification_action_color_filter
me.zhanghai.android.materialprogressbar.R$color: int secondary_text_default_material_dark
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasSecondaryProgressTint
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPopupWindowStyle
me.zhanghai.android.materialprogressbar.R$id: int title_template
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Messaging
me.zhanghai.android.materialprogressbar.R$drawable: int notify_panel_notification_icon_bg
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean colorized
me.zhanghai.android.materialprogressbar.R$styleable: int[] MenuGroup
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_y_offset_non_touch
io.flutter.embedding.engine.FlutterOverlaySurface: int id
me.zhanghai.android.materialprogressbar.R$attr: int toolbarStyle
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Inbox
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean setAsGroupSummary
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_disabled_holo_dark
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
me.zhanghai.android.materialprogressbar.R$id: int notification_main_column_container
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_PopupWindow
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NAME
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
me.zhanghai.android.materialprogressbar.R$id: int beginning
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_android_fontStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Spinner
me.zhanghai.android.materialprogressbar.R$attr: int titleTextAppearance
androidx.window.core.Bounds: int top
me.zhanghai.android.materialprogressbar.R$styleable: int[] PopupWindowBackgroundState
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Caption
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorPrimaryDark
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ALL_METHOD
me.zhanghai.android.materialprogressbar.R$attr: int windowMinWidthMinor
me.zhanghai.android.materialprogressbar.R$attr: int actionBarTabBarStyle
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_android_orientation
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_SCALE_X: android.view.animation.Interpolator INSTANCE
androidx.window.R$attr: int alwaysExpand
me.zhanghai.android.materialprogressbar.R$attr: int progressBarPadding
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActionMenuView
me.zhanghai.android.materialprogressbar.R$id: int bottom
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String category
me.zhanghai.android.materialprogressbar.R$attr: int barLength
me.zhanghai.android.materialprogressbar.R$id: int submenuarrow
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
me.zhanghai.android.materialprogressbar.R$attr: int switchMinWidth
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_media_custom
me.zhanghai.android.materialprogressbar.R$dimen: int highlight_alpha_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_popupWindowStyle
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Object icon
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_colored_material
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
me.zhanghai.android.materialprogressbar.R$style: int Platform_V25_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dropdownitem_text_padding_right
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INPUT
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_android_windowAnimationStyle
me.zhanghai.android.materialprogressbar.R$id: int useLogo
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int DETERMINATE_CIRCULAR_PROGRESS_STYLE_DYNAMIC
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
me.zhanghai.android.materialprogressbar.R$attr: int actionModePasteDrawable
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
de.mintware.barcode_scan.Protos$ScanResult: int type_
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorButtonNormal
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource RawResource
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Display1
me.zhanghai.android.materialprogressbar.R$string: int abc_action_bar_up_description
de.mintware.barcode_scan.Protos$Configuration: int restrictFormatMemoizedSerializedSize
me.zhanghai.android.materialprogressbar.R$id: int blocking
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_backgroundStacked
androidx.window.layout.FoldingFeature$State: java.lang.String description
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
me.zhanghai.android.materialprogressbar.R$styleable: int[] LinearLayoutCompat
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
me.zhanghai.android.materialprogressbar.R$attr: int popupWindowStyle
me.zhanghai.android.materialprogressbar.R$attr: int actionLayout
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String IMPORTANCE
me.zhanghai.android.materialprogressbar.R$color: int primary_text_default_material_dark
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_overflow_padding_end_material
androidx.window.core.Bounds: int left
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String groupKey
me.zhanghai.android.materialprogressbar.R$attr: int listMenuViewStyle
me.zhanghai.android.materialprogressbar.R$dimen: int notification_main_column_padding_top
me.zhanghai.android.materialprogressbar.R$layout: int abc_alert_dialog_title_material
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatSummaryText
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfMonthAndTime
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_logo
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_fontFamily
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_BIG_TEXT
me.zhanghai.android.materialprogressbar.R$attr: int actionModeStyle
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.DateTimeComponents matchDateTimeComponents
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_autoSizeStepGranularity
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
me.zhanghai.android.materialprogressbar.R$string: int abc_capital_off
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionMode
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIME_ZONE_NAME
me.zhanghai.android.materialprogressbar.R$attr: int autoSizePresetSizes
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_SearchView
com.google.android.gms.maps.model.StyleSpan: android.os.Parcelable$Creator CREATOR
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
me.zhanghai.android.materialprogressbar.R$id: int expand_activities_button
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetStartWithNavigation
me.zhanghai.android.materialprogressbar.R$attr: int progressBarStyle
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.ColorFilter mColorFilter
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND
me.zhanghai.android.materialprogressbar.R$id: int search_go_btn
me.zhanghai.android.materialprogressbar.R$id: int select_dialog_listview
androidx.window.embedding.ActivityStack: java.util.List activities
me.zhanghai.android.materialprogressbar.R$drawable: int abc_scrubber_control_off_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$dimen: int compat_button_padding_horizontal_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableEndCompat
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX RECT_2_TRANSFORM_X
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
me.zhanghai.android.materialprogressbar.R$dimen: int compat_button_padding_vertical_material
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textStyle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableStart
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionBar
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HIDE_EXPANDED_LARGE_ICON
me.zhanghai.android.materialprogressbar.R$color: int material_blue_grey_950
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BOT
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableBottom
me.zhanghai.android.materialprogressbar.R$dimen: int abc_edit_text_inset_top_material
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
me.zhanghai.android.materialprogressbar.R$attr: int color
me.zhanghai.android.materialprogressbar.R$color: int background_material_light
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_mode_bar
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_actionLayout
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_content_inset_material
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_spinBars
me.zhanghai.android.materialprogressbar.R$color: int highlighted_text_material_light
me.zhanghai.android.materialprogressbar.R$id: int title
me.zhanghai.android.materialprogressbar.R$attr: int windowMinWidthMajor
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetEnd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: long[] vibrationPattern
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorError
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource DrawableResource
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Title_Inverse
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_CompactMenu
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
me.zhanghai.android.materialprogressbar.R$id: int default_activity_button
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatSeekBar_android_thumb
me.zhanghai.android.materialprogressbar.R$attr: int actionModeSelectAllDrawable
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_closeIcon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_LIGHTS
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Tooltip
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_FOREGROUND_NOTIFICATION_ACTION
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Title
androidx.window.R$styleable: int SplitPairRule_splitRatio
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
me.zhanghai.android.materialprogressbar.R$string: int abc_activity_chooser_view_see_all
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_TAG
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonBarButtonStyle
me.zhanghai.android.materialprogressbar.R$attr: int closeItemLayout
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
me.zhanghai.android.materialprogressbar.R$id: int activity_chooser_view_content
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONVERSATION_TITLE
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_DialogWhenLarge
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$drawable: int tooltip_frame_light
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_vertical_padding
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_big_media_narrow_custom
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_subMenuArrow
me.zhanghai.android.materialprogressbar.R$attr: int switchPadding
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource DrawableResource
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_track
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object largeIcon
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
me.zhanghai.android.materialprogressbar.R$id: int action_context_bar
me.zhanghai.android.materialprogressbar.R$attr: int collapseIcon
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_SCALE_X: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT2_SCALE_X
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
me.zhanghai.android.materialprogressbar.R$style: int Base_DialogWindowTitle_AppCompat
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ACTION_ID
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
me.zhanghai.android.materialprogressbar.R$layout: int select_dialog_item_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_LINES
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: float mBackgroundAlpha
me.zhanghai.android.materialprogressbar.R$attr: int mpb_progressStyle
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_checkable
me.zhanghai.android.materialprogressbar.R$attr: int buttonBarStyle
me.zhanghai.android.materialprogressbar.R$drawable: int abc_text_cursor_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_borderlessButtonStyle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorControlHighlight
me.zhanghai.android.materialprogressbar.R$layout: int abc_search_dropdown_item_icons_2line
com.google.android.gms.location.LocationSettingsResult: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_V26_Theme_AppCompat_Light
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_RED
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_android_focusable
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_subhead_material
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_android_imeOptions
me.zhanghai.android.materialprogressbar.R$id: int multiply
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Default
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
me.zhanghai.android.materialprogressbar.R$drawable: int tooltip_frame_dark
me.zhanghai.android.materialprogressbar.R$string: int abc_capital_on
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dropdownitem_icon_width
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Animation_AppCompat_Dialog
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ALLOW_WHILE_IDLE
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_selectableItemBackground
me.zhanghai.android.materialprogressbar.R$color: int accent_material_dark
me.zhanghai.android.materialprogressbar.R$id: int topPanel
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_fixed_height_major
me.zhanghai.android.materialprogressbar.R$attr: int srcCompat
me.zhanghai.android.materialprogressbar.R$attr: int paddingBottomNoButtons
me.zhanghai.android.materialprogressbar.R$styleable: int[] RecycleListView
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Menu
me.zhanghai.android.materialprogressbar.R$attr: int iconifiedByDefault
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int mProgressStyle
me.zhanghai.android.materialprogressbar.R$string: int abc_action_mode_done
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_textLocale
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean usesChronometer
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_DESCRIPTION
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceListItemSecondary
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetStart
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource ByteArray
me.zhanghai.android.materialprogressbar.R$drawable: int abc_item_background_holo_dark
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] $VALUES
me.zhanghai.android.materialprogressbar.R$styleable: int[] CompoundButton
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderCerts
me.zhanghai.android.materialprogressbar.BaseProgressDrawable: boolean mUseIntrinsicPadding
me.zhanghai.android.materialprogressbar.R$style: int AlertDialog_AppCompat
me.zhanghai.android.materialprogressbar.R$attr: int actionModePopupWindowStyle
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
de.mintware.barcode_scan.Protos$ScanResult: int format_
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable: boolean mShow
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button_Colored
me.zhanghai.android.materialprogressbar.R$attr: int selectableItemBackground
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_ERROR_CODE
me.zhanghai.android.materialprogressbar.R$color: int material_grey_800
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Weekly
me.zhanghai.android.materialprogressbar.R$id: int list_item
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_small_material
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.google.android.gms.location.LocationSettingsStates: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$color: int material_grey_900
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Daily
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ImageButton
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_thumbTextPadding
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TEXT
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int Spinner_android_dropDownWidth
androidx.window.R$attr: int placeholderActivityName
androidx.window.embedding.SplitRule: int layoutDirection
me.zhanghai.android.materialprogressbar.R$attr: int mpb_useIntrinsicPadding
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_arrowShaftLength
me.zhanghai.android.materialprogressbar.R$attr: int alpha
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_disabled_material_dark
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX RECT_1_TRANSFORM_X
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_background
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_collapseIcon
me.zhanghai.android.materialprogressbar.R$id: int textSpacerNoButtons
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_homeAsUpIndicator
me.zhanghai.android.materialprogressbar.R$attr: int dividerHorizontal
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_icon
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatSeekBar_tickMarkTint
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_checked
me.zhanghai.android.materialprogressbar.R$bool: int abc_action_bar_embed_tabs
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
me.zhanghai.android.materialprogressbar.R$attr: int listDividerAlertDialog
me.zhanghai.android.materialprogressbar.R$attr: int actionBarStyle
me.zhanghai.android.materialprogressbar.R$id: int cancel_action
me.zhanghai.android.materialprogressbar.R$styleable: int ViewBackgroundHelper_android_background
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_autoSizeMinTextSize
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X: android.view.animation.Interpolator INSTANCE
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderAuthority
me.zhanghai.android.materialprogressbar.R$attr: int actionBarPopupTheme
me.zhanghai.android.materialprogressbar.R$layout: int notification_media_action
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_horizontal_padding
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Dialog_MinWidth
me.zhanghai.android.materialprogressbar.R$attr: int homeLayout
me.zhanghai.android.materialprogressbar.R$attr: int actionModeBackground
me.zhanghai.android.materialprogressbar.R$attr: int drawableSize
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_divider
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleTextAppearance
me.zhanghai.android.materialprogressbar.R$attr: int trackTintMode
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Subhead
me.zhanghai.android.materialprogressbar.R$attr: int colorControlActivated
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Subhead_Inverse
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_seek_thumb
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Title
com.google.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
me.zhanghai.android.materialprogressbar.R$attr: int mpb_showProgressBackground
me.zhanghai.android.materialprogressbar.R$styleable: int View_android_theme
me.zhanghai.android.materialprogressbar.R$attr: int actionBarDivider
androidx.window.R$styleable: int[] ActivityRule
me.zhanghai.android.materialprogressbar.R$id: int async
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ProgressBar
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULED_NOTIFICATIONS
io.flutter.plugin.platform.SingleViewPresentation: int viewId
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int PADDED_INTRINSIC_SIZE_DP
me.zhanghai.android.materialprogressbar.R$id: int showTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_BLUE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ID
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_big_media
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_barLength
me.zhanghai.android.materialprogressbar.R$dimen: int abc_disabled_alpha_material_dark
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERMISSION_REQUEST_IN_PROGRESS_ERROR_CODE
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableTintMode
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar
me.zhanghai.android.materialprogressbar.R$attr: int tintMode
me.zhanghai.android.materialprogressbar.R$attr: int subtitleTextColor
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_GREEN
me.zhanghai.android.materialprogressbar.R$dimen: int abc_control_corner_material
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String HOUR
me.zhanghai.android.materialprogressbar.R$attr: int navigationMode
me.zhanghai.android.materialprogressbar.R$attr: int windowFixedWidthMinor
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Weekly
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_min_width_major
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_medium_material
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String name
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_android_thumb
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableTop
me.zhanghai.android.materialprogressbar.R$attr: int defaultQueryHint
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_bar_title_item
me.zhanghai.android.materialprogressbar.R$attr: int alertDialogCenterButtons
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_titleTextStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_V26_Theme_AppCompat
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
me.zhanghai.android.materialprogressbar.R$attr: int listChoiceBackgroundIndicator
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_dividerPadding
me.zhanghai.android.materialprogressbar.R$attr: int ratingBarStyleSmall
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean $assertionsDisabled
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button_Small
me.zhanghai.android.materialprogressbar.R$dimen: int abc_disabled_alpha_material_light
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_focused_holo
me.zhanghai.android.materialprogressbar.R$attr: int editTextColor
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Toolbar
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String DESCRIPTION
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_titleCondensed
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
me.zhanghai.android.materialprogressbar.R$attr: int editTextBackground
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean hideExpandedLargeIcon
de.mintware.barcode_scan.Protos$ScanResult: de.mintware.barcode_scan.Protos$ScanResult DEFAULT_INSTANCE
me.zhanghai.android.materialprogressbar.R$id: int forever
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_SUMMARY_TEXT
me.zhanghai.android.materialprogressbar.MaterialProgressBar: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$attr: int titleTextStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String URI
me.zhanghai.android.materialprogressbar.R$styleable: int[] Toolbar
me.zhanghai.android.materialprogressbar.R$attr: int splitTrack
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TITLE
me.zhanghai.android.materialprogressbar.R$attr: int mpb_setBothDrawables
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: android.graphics.RectF RECT_BOUND
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CATEGORY
me.zhanghai.android.materialprogressbar.R$layout: int abc_screen_toolbar
me.zhanghai.android.materialprogressbar.R$color: int material_grey_600
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_precise_anchor_threshold
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_indeterminateProgressStyle
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetEndWithActions
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_PopupMenu
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_METHOD
kotlin.jvm.internal.CallableReference: boolean isTopLevel
de.mintware.barcode_scan.Protos$ScanResult: java.lang.String formatNote_
me.zhanghai.android.materialprogressbar.R$dimen: int abc_floating_window_z
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_AutoCompleteTextView
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
me.zhanghai.android.materialprogressbar.R$style: int Platform_ThemeOverlay_AppCompat
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.RepeatInterval repeatInterval
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int mPaddedIntrinsicSize
com.google.android.gms.maps.GoogleMapOptions: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showWhen
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_material_dark
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_switch_to_on_mtrl_00012
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_SearchResult_Title
me.zhanghai.android.materialprogressbar.R$layout: int abc_screen_simple
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Context applicationContext
me.zhanghai.android.materialprogressbar.R$style: int Platform_V21_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$id: int search_voice_btn
de.mintware.barcode_scan.Protos$ScanResult: int RAWCONTENT_FIELD_NUMBER
de.mintware.barcode_scan.Protos$ScanResult: java.lang.String rawContent_
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Time
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String name
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActionMode
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Widget_AppCompat_Toolbar
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowNoTitle
me.zhanghai.android.materialprogressbar.R$styleable: int[] Spinner
me.zhanghai.android.materialprogressbar.R$layout: int select_dialog_multichoice_material
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.dexterous.flutterlocalnotifications.models.NotificationAction: com.dexterous.flutterlocalnotifications.models.IconSource iconSource
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
me.zhanghai.android.materialprogressbar.R$attr: int actionProviderClass
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DateAndTime
me.zhanghai.android.materialprogressbar.R$id: int progress_horizontal
me.zhanghai.android.materialprogressbar.R$styleable: int[] View
me.zhanghai.android.materialprogressbar.R$layout: int abc_alert_dialog_material
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_goIcon
me.zhanghai.android.materialprogressbar.R$layout: int notification_action
me.zhanghai.android.materialprogressbar.R$attr: int actionOverflowButtonStyle
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasProgressTint
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_DrawerArrowToggle
me.zhanghai.android.materialprogressbar.R$attr: int iconTintMode
androidx.window.R$id: int androidx_window_activity_scope
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_voice_search_api_material
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$dimen: int abc_alert_dialog_button_bar_height
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
me.zhanghai.android.materialprogressbar.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
me.zhanghai.android.materialprogressbar.R$attr: int selectableItemBackgroundBorderless
com.dexterous.flutterlocalnotifications.models.MessageDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails person
androidx.window.core.Version: androidx.window.core.Version CURRENT
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_START: android.view.animation.Interpolator INSTANCE
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMarginBottom
me.zhanghai.android.materialprogressbar.BaseDrawable: int mAlpha
me.zhanghai.android.materialprogressbar.R$attr: int checkboxStyle
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX mRect1TransformX
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String text
me.zhanghai.android.materialprogressbar.R$dimen: int abc_switch_padding
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_radioButtonStyle
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.window.embedding.SplitRule: int minWidth
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_Switch
me.zhanghai.android.materialprogressbar.R$id: int split_action_bar
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: android.graphics.RectF RECT_PROGRESS
me.zhanghai.android.materialprogressbar.R$styleable: int ActivityChooserView_initialActivityCount
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int Spinner_android_prompt
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_homeAsUpIndicator
me.zhanghai.android.materialprogressbar.R$integer: int status_bar_notification_info_maxnum
me.zhanghai.android.materialprogressbar.R$attr: int actionButtonStyle
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULE_METHOD
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_queryBackground
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_Dialog
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency scheduledNotificationRepeatFrequency
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_itemTextAppearance
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_buttonIconDimen
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer audioAttributesUsage
me.zhanghai.android.materialprogressbar.R$attr: int textColorSearchUrl
androidx.window.R$styleable: int[] SplitPairRule
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ACTIONS
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MILLISECONDS_SINCE_EPOCH
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
me.zhanghai.android.materialprogressbar.R$drawable: int abc_spinner_mtrl_am_alpha
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer groupAlertBehavior
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_suggestionRowLayout
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat[] values()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: MaterialProgressBar(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable: boolean getUseIntrinsicPadding()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.google.android.material.chip.Chip: void setCheckable(boolean)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setShowBackground(boolean)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.constraintlayout.widget.Barrier: void setType(int)
androidx.window.layout.EmptyDecorator: EmptyDecorator()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.afollestad.materialdialogs.Theme: com.afollestad.materialdialogs.Theme valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void onPreparePaint(android.graphics.Paint)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.embedding.SplitRule: int getLayoutDirection()
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedSchedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.ConstraintLayout: java.lang.String getSceneString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: void setTint(int)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
in.jvapps.disable_battery_optimization.devices.Meizu$MEIZU_SECURITY_CENTER_VERSION: in.jvapps.disable_battery_optimization.devices.Meizu$MEIZU_SECURITY_CENTER_VERSION[] values()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
androidx.window.layout.WindowLayoutInfo: int hashCode()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
androidx.window.layout.WindowInfoTracker$-CC: void reset()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.afollestad.materialdialogs.DialogAction: com.afollestad.materialdialogs.DialogAction valueOf(java.lang.String)
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode[] values()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.cardview.widget.CardView: void setMinimumWidth(int)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.core.app.BundleCompat$Api18Impl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setUseIntrinsicPadding(boolean)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.google.firebase.iid.Registrar: Registrar()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: FlutterFirebaseMessagingReceiver()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: ScheduledNotificationReceiver()
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
com.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigPictureStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void drawProgressRect(android.graphics.Canvas,me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX,android.graphics.Paint)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.dexterous.flutterlocalnotifications.utils.StringUtils: java.lang.Boolean isNullOrEmpty(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describePerson(androidx.core.app.Person)
in.jvapps.disable_battery_optimization.managers.KillerManager$Actions: in.jvapps.disable_battery_optimization.managers.KillerManager$Actions valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: int getTextHeight()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
me.zhanghai.android.materialprogressbar.R$integer: R$integer()
androidx.window.embedding.SplitController: void clearRegisteredRules()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.core.os.CancellationSignal$Api16Impl: void cancel(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
androidx.window.core.Bounds: boolean isEmpty()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setTimeoutAfter(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: boolean getUseIntrinsicPadding()
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.SearchView: int getInputType()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
com.google.android.material.chip.Chip: void setGravity(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationDetails from(java.util.Map)
me.zhanghai.android.materialprogressbar.R$string: R$string()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
me.dm7.barcodescanner.core.BarcodeScannerView: void setBorderCornerRadius(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: ScheduledNotificationRepeatFrequency(java.lang.String,int)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: IndeterminateHorizontalProgressDrawable(android.content.Context)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
androidx.core.os.BundleApi18ImplKt: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
androidx.core.app.RemoteInput$Api16Impl: void setClipData(android.content.Intent,android.content.ClipData)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationManagerCompat getNotificationManager(android.content.Context)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
androidx.core.view.GravityCompat$Api17Impl: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
androidx.constraintlayout.motion.widget.MotionLayout: void setTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.constraintlayout.motion.widget.MotionLayout: void setOnHide(float)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getProgressTintMode()
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.google.android.material.card.MaterialCardView: float getProgress()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.dexterous.flutterlocalnotifications.models.NotificationAction: NotificationAction(java.util.Map)
com.afollestad.materialdialogs.internal.MDRootLayout: void setMaxHeight(int)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.constraintlayout.motion.widget.MotionLayout: android.os.Bundle getTransitionState()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
androidx.window.layout.HardwareFoldingFeature: int hashCode()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: void setShowBackground(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
androidx.startup.InitializationProvider: InitializationProvider()
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState: int getChangingConfigurations()
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
me.zhanghai.android.materialprogressbar.Interpolators: Interpolators()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readColor(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.window.R: R()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
androidx.window.embedding.SplitPairRule: boolean getClearTop()
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setUseIntrinsicPadding(boolean)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setAlpha(int)
androidx.constraintlayout.motion.widget.MotionLayout: java.util.ArrayList getDefinedTransitions()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivityForConfigChanges()
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.window.embedding.SplitRule: SplitRule()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
me.zhanghai.android.materialprogressbar.BaseDrawable: void setColorFilter(android.graphics.ColorFilter)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void removeNotificationFromCache(android.content.Context,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setColorFilter(android.graphics.ColorFilter)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
me.dm7.barcodescanner.core.ViewFinderView: void setBorderCornerRadius(int)
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] values()
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] values()
me.dm7.barcodescanner.core.BarcodeScannerView: void setLaserEnabled(boolean)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotifications(android.content.Context,java.util.ArrayList)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readInboxStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.window.core.Version: java.lang.String getDescription()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.core.app.AlarmManagerCompat$Api19Impl: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.window.core.Version: int compareTo(java.lang.Object)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
com.afollestad.materialdialogs.internal.MDRootLayout: void setStackingBehavior(com.afollestad.materialdialogs.StackingBehavior)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
me.dm7.barcodescanner.core.BarcodeScannerView: boolean getFlash()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
de.mintware.barcode_scan.ChannelHandler: void scan(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.core.Bounds: int getLeft()
me.dm7.barcodescanner.core.CameraPreview: void setShouldScaleToFill(boolean)
me.dm7.barcodescanner.core.BarcodeScannerView: void setAutoFocus(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.window.embedding.SplitController: SplitController()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.window.embedding.SplitRule: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
me.zhanghai.android.materialprogressbar.BuildConfig: BuildConfig()
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: void draw(android.graphics.Canvas)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
me.dm7.barcodescanner.zxing.ZXingScannerView: void setResultHandler(me.dm7.barcodescanner.zxing.ZXingScannerView$ResultHandler)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: boolean getShowProgressBackground()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getProgressBackgroundTintList()
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int getAlpha()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
androidx.constraintlayout.motion.widget.MotionLayout: int getCurrentState()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.core.Version: int getMajor()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void stop()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationCompat$MessagingStyle$Message createMessage(android.content.Context,com.dexterous.flutterlocalnotifications.models.MessageDetails)
androidx.window.core.Bounds: int getRight()
me.dm7.barcodescanner.core.BarcodeScannerView: int getRotationCount()
androidx.window.embedding.SplitRule: int getMinWidth()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
io.flutter.plugins.imagepicker.ImagePickerCache$CacheType: io.flutter.plugins.imagepicker.ImagePickerCache$CacheType[] values()
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String)
io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice: io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice valueOf(java.lang.String)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.window.core.Version: int getMinor()
com.google.android.material.chip.Chip: void setCloseIconSize(float)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateRepeatIntervalMilliseconds(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
me.zhanghai.android.materialprogressbar.BasePaintDrawable: void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint)
com.google.android.material.button.MaterialButton: int getCornerRadius()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.chip.Chip: float getIconStartPadding()
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionState(android.os.Bundle)
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
xyz.luan.audioplayers.ReleaseMode: xyz.luan.audioplayers.ReleaseMode[] values()
com.afollestad.materialdialogs.internal.MDButton: void setDefaultSelector(android.graphics.drawable.Drawable)
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: boolean getUseIntrinsicPadding()
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
androidx.constraintlayout.motion.widget.MotionLayout: androidx.constraintlayout.motion.widget.MotionScene getScene()
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer[] values()
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
me.dm7.barcodescanner.core.BarcodeScannerView: void setShouldScaleToFill(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval valueOf(java.lang.String)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
io.flutter.plugins.imagepicker.Messages$SourceCamera: io.flutter.plugins.imagepicker.Messages$SourceCamera valueOf(java.lang.String)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: void setTintList(android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCornerSize(float)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.core.content.FileProvider: FileProvider()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.afollestad.materialdialogs.MaterialDialog$ListType: com.afollestad.materialdialogs.MaterialDialog$ListType[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: ObjectAnimatorCompatBase()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.google.firebase.iid.Registrar: java.util.List getComponents()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidRawSoundResource(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_SCALE_X: Interpolators$INDETERMINATE_HORIZONTAL_RECT2_SCALE_X()
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setProgressTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
androidx.window.core.Bounds: int getBottom()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: boolean isRunning()
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: boolean isStateful()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getIndeterminateTintMode()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
io.flutter.plugins.imagepicker.Messages$SourceType: io.flutter.plugins.imagepicker.Messages$SourceType valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionListener(androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setProgressTintMode(android.graphics.PorterDuff$Mode)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
com.google.android.material.card.MaterialCardView: void setRadius(float)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean canCreateNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.google.protobuf.JavaType: com.google.protobuf.JavaType[] values()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable: void setShowBackground(boolean)
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
androidx.core.graphics.drawable.IconCompat: IconCompat()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_END: Interpolators$TRIM_PATH_END()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.android.material.chip.Chip: void setChipStartPadding(float)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState: BaseDrawable$DummyConstantState(me.zhanghai.android.materialprogressbar.BaseDrawable,me.zhanghai.android.materialprogressbar.BaseDrawable$1)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: boolean getUseIntrinsicPadding()
me.dm7.barcodescanner.core.ViewFinderView: void setBorderColor(int)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
me.dm7.barcodescanner.core.ViewFinderView: void setBorderLineLength(int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean launchedActivityFromHistory(android.content.Intent)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent getLaunchIntent(android.content.Context)
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
me.dm7.barcodescanner.core.CameraPreview: void setAspectTolerance(float)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: CircularProgressBackgroundDrawable()
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
androidx.window.R$id: R$id()
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
com.afollestad.materialdialogs.internal.MDButton: void setStackedSelector(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotificationMatchingDateComponents(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: FlutterFirebaseMessagingBackgroundService()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: void setShowBackground(boolean)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
me.dm7.barcodescanner.core.ViewFinderView: void setLaserEnabled(boolean)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
de.mintware.barcode_scan.ZXingAutofocusScannerView: void setAutoFocus(boolean)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setProgressBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.ColorFilter getColorFilter()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
io.flutter.plugins.imagepicker.Messages$SourceCamera: io.flutter.plugins.imagepicker.Messages$SourceCamera[] values()
androidx.window.R$attr: R$attr()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
androidx.window.core.Version: int hashCode()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.constraintlayout.motion.widget.MotionLayout: androidx.constraintlayout.motion.widget.DesignTool getDesignTool()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: boolean onLevelChange(int)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
me.zhanghai.android.materialprogressbar.BaseProgressDrawable: void setUseIntrinsicPadding(boolean)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyTintForDrawable(android.graphics.drawable.Drawable,android.content.res.ColorStateList,boolean,android.graphics.PorterDuff$Mode,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson buildGson()
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.constraintlayout.motion.widget.MotionHelper: float getProgress()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: boolean getShowBackground()
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation: StyleInformation()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails from(java.util.Map)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
com.google.android.gms.location.LocationRequest: LocationRequest()
kotlin.jvm.internal.CallableReference: boolean isFinal()
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: ScheduledNotificationBootReceiver()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: FlutterLocalNotificationsPlugin()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
me.zhanghai.android.materialprogressbar.BasePaintDrawable: void onPreparePaint(android.graphics.Paint)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readChannelInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType[] values()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.google.protobuf.JavaType: com.google.protobuf.JavaType valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void pendingNotificationRequests(io.flutter.plugin.common.MethodChannel$Result)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat[] values()
com.google.android.material.button.MaterialButton: int getInsetTop()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: IndeterminateHorizontalProgressDrawable$RectTransformX(float,float)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation: IndeterminateCircularProgressDrawable$RingRotation()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable: void draw(android.graphics.Canvas)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
com.google.android.material.button.MaterialButton: int getIconPadding()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] values()
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
kotlin.jvm.internal.FunctionReference: boolean isExternal()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.google.android.material.chip.ChipGroup: int getChipCount()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void rescheduleNotifications(android.content.Context)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int getIntrinsicHeight()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: NotificationChannelGroupDetails()
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values()
com.google.android.material.button.MaterialButton: int getTextWidth()
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] values()
androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission valueOf(java.lang.String)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
com.google.android.material.chip.Chip: float getChipMinHeight()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
me.zhanghai.android.materialprogressbar.BasePaintDrawable: void onDraw(android.graphics.Canvas,int,int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.window.embedding.MatcherUtils: MatcherUtils()
me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateRotation(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: void setTrimPathEnd(float)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
androidx.window.core.Bounds: Bounds(int,int,int,int)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
me.dm7.barcodescanner.core.CameraPreview: android.hardware.Camera$Size getOptimalPreviewSize()
com.google.android.material.button.MaterialButton: void setElevation(float)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
com.dexterous.flutterlocalnotifications.models.Time: com.dexterous.flutterlocalnotifications.models.Time from(java.util.Map)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: SingleCircularProgressDrawable(int)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails from(java.util.Map)
com.afollestad.materialdialogs.StackingBehavior: com.afollestad.materialdialogs.StackingBehavior[] values()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: boolean isRunning()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: boolean getUseIntrinsicPadding()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
me.zhanghai.android.materialprogressbar.BaseProgressDrawable: BaseProgressDrawable()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
io.flutter.plugins.imagepicker.Messages$SourceType: io.flutter.plugins.imagepicker.Messages$SourceType[] values()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.dexterous.flutterlocalnotifications.models.SoundSource: SoundSource(java.lang.String,int)
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: InboxStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean)
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: void setTint(int)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int getIntrinsicHeight()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.util.List castList(java.lang.Class,java.util.Collection)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.graphics.Bitmap getBitmapFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
me.dm7.barcodescanner.core.BarcodeScannerView: void setAspectTolerance(float)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI[] values()
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int getProgressStyle()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: void calculateXYValues(android.graphics.Path,int[],int[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
me.zhanghai.android.materialprogressbar.TintableDrawable: void setTint(int)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.google.protobuf.FieldType: com.google.protobuf.FieldType valueOf(java.lang.String)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int getOpacity()
androidx.window.embedding.SplitController: boolean isSplitSupported()
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.constraintlayout.motion.widget.MotionHelper: void setProgress(float)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.afollestad.materialdialogs.MaterialDialog$ListType: com.afollestad.materialdialogs.MaterialDialog$ListType valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource valueOf(java.lang.String)
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection valueOf(java.lang.String)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: void onDrawRect(android.graphics.Canvas,android.graphics.Paint)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.models.NotificationDetails extractNotificationDetails(io.flutter.plugin.common.MethodChannel$Result,java.util.Map)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.AlarmManager getAlarmManager(android.content.Context)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
me.zhanghai.android.materialprogressbar.R$bool: R$bool()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: NotificationDetails()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
com.google.android.material.chip.Chip: void setChecked(boolean)
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: BaseIndeterminateProgressDrawable(android.content.Context)
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] values()
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
LogLevel: LogLevel valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: BaseSingleHorizontalProgressDrawable(android.content.Context)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource valueOf(java.lang.String)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
com.google.android.material.button.MaterialButton: void setPressed(boolean)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: boolean getShowBackground()
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
me.zhanghai.android.materialprogressbar.TintableDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.fragment.app.Fragment: Fragment()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
me.zhanghai.android.materialprogressbar.R$anim: R$anim()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void draw(android.graphics.Canvas)
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.google.android.material.button.MaterialButton: void setIconResource(int)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: MaterialProgressBar$TintInfo(me.zhanghai.android.materialprogressbar.MaterialProgressBar$1)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int getIntrinsicSize()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: IndeterminateCircularProgressDrawable(android.content.Context)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
me.dm7.barcodescanner.core.BarcodeScannerView: void setLaserColor(int)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: BaseSingleCircularProgressDrawable()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initialize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.constraintlayout.motion.widget.MotionLayout: int getStartState()
com.afollestad.materialdialogs.internal.MDButton: void setAllCapsCompat(boolean)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: void onPreparePaint(android.graphics.Paint)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
androidx.window.R$styleable: R$styleable()
androidx.window.layout.SidecarAdapter: SidecarAdapter()
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onNewIntent(android.content.Intent)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: android.graphics.ColorFilter getColorFilter()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: NotificationChannelDetails()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: MaterialProgressBar$TintInfo()
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
me.dm7.barcodescanner.core.BarcodeScannerView: void setBorderLineLength(int)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void start()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.constraintlayout.motion.widget.MotionLayout: void setDelayedApplicationOfInitialState(boolean)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: void setUseIntrinsicPadding(boolean)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
me.zhanghai.android.materialprogressbar.BaseDrawable: BaseDrawable()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void onPreparePaint(android.graphics.Paint)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: void onDrawRing(android.graphics.Canvas,android.graphics.Paint)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Notification createNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.window.core.Bounds: int getWidth()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
me.dm7.barcodescanner.core.CameraPreview: void setAutoFocus(boolean)
com.afollestad.materialdialogs.Theme: com.afollestad.materialdialogs.Theme[] values()
androidx.window.embedding.ActivityFilter: int hashCode()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readProgressInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionDuration(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
androidx.constraintlayout.motion.widget.MotionLayout: void setInteractionEnabled(boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map access$200(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
in.jvapps.disable_battery_optimization.utils.Manufacturer: in.jvapps.disable_battery_optimization.utils.Manufacturer valueOf(java.lang.String)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.window.layout.FoldingFeature: boolean isSeparating()
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.constraintlayout.motion.widget.MotionLayout: long getNanoTime()
de.belitzo.driver.MainActivity: MainActivity()
com.google.i18n.phonenumbers.NumberParseException$ErrorType: com.google.i18n.phonenumbers.NumberParseException$ErrorType[] values()
com.google.android.material.button.MaterialButton: void setInsetTop(int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
com.dexterous.flutterlocalnotifications.models.BitmapSource: BitmapSource(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
androidx.window.core.Bounds: android.graphics.Rect toRect()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigTextStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
de.mintware.barcode_scan.Protos$ResultType: de.mintware.barcode_scan.Protos$ResultType valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
me.zhanghai.android.materialprogressbar.BaseDrawable: boolean updateTintFilter()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: IndeterminateCircularProgressDrawable$RingPathTransform(me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$1)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void draw(android.graphics.Canvas)
me.zhanghai.android.materialprogressbar.ShowBackgroundDrawable: boolean getShowBackground()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getSecondaryProgressTintMode()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
kotlin.jvm.internal.FunctionReference: int hashCode()
me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.google.android.material.textfield.TextInputLayout: void setHint(int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum[] values()
androidx.constraintlayout.motion.widget.MotionLayout: void setDebugMode(int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType[] values()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: boolean getUseIntrinsicPadding()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType: com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType[] values()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState: BaseDrawable$DummyConstantState(me.zhanghai.android.materialprogressbar.BaseDrawable)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
me.zhanghai.android.materialprogressbar.internal.DrawableCompat: DrawableCompat()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: DefaultStyleInformation(java.lang.Boolean,java.lang.Boolean)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
androidx.window.core.Version: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
com.google.android.material.chip.Chip: void setMinLines(int)
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.graphics.drawable.IconCompat getIconFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values()
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
me.zhanghai.android.materialprogressbar.BaseDrawable: int getAlpha()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void applyGrouping(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.afollestad.materialdialogs.DialogAction: com.afollestad.materialdialogs.DialogAction[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeat(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.afollestad.materialdialogs.internal.MDButton: MDButton(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setActivity(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
me.dm7.barcodescanner.core.ViewFinderView: void setBorderAlpha(float)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMessagingStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] values()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.ArrayList readMessages(java.util.ArrayList)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setInboxStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.PendingIntent getBroadcastPendingIntent(android.content.Context,int,android.content.Intent)
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] values()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setLiftableOverrideEnabled(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
androidx.constraintlayout.widget.ConstraintHelper: void setReferenceTags(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.google.android.material.chip.Chip: void setChipTextResource(int)
me.dm7.barcodescanner.core.BarcodeScannerView: void setBorderStrokeWidth(int)
me.dm7.barcodescanner.core.BarcodeScannerView: void setMaskColor(int)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: void onDrawRing(android.graphics.Canvas,android.graphics.Paint)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String access$000(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void stop()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setUseIntrinsicPadding(boolean)
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
androidx.core.app.AlarmManagerCompat$Api23Impl: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDate(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateNextNotificationTrigger(long,long)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
androidx.window.core.Bounds: boolean isZero()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
me.zhanghai.android.materialprogressbar.BaseDrawable: boolean isStateful()
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyProgressTints()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setCategory(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
me.dm7.barcodescanner.core.BarcodeScannerView: void setIsBorderCornerRounded(boolean)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelAllNotifications(io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
me.zhanghai.android.materialprogressbar.R$id: R$id()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
LogLevel: LogLevel[] values()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
com.google.android.gms.common.api.internal.zzd: zzd()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] values()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setElevation(float)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: IndeterminateHorizontalProgressDrawable$RectTransformX(me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX)
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_SCALE_X: Interpolators$INDETERMINATE_HORIZONTAL_RECT1_SCALE_X()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: void setTintList(android.content.res.ColorStateList)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIconTint(int)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
androidx.window.layout.WindowMetricsCalculator$-CC: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
com.google.android.material.chip.Chip: float getChipStartPadding()
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.google.android.material.button.MaterialButton: void setIconSize(int)
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float,float,float)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] values()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void areNotificationsEnabled(io.flutter.plugin.common.MethodChannel$Result)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void showNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readSoundInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.drawable.Drawable getTintTargetFromProgressDrawable(int,boolean)
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_START: Interpolators$TRIM_PATH_START()
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationChannels(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
in.jvapps.disable_battery_optimization.devices.Meizu$MEIZU_SECURITY_CENTER_VERSION: in.jvapps.disable_battery_optimization.devices.Meizu$MEIZU_SECURITY_CENTER_VERSION valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
in.jvapps.disable_battery_optimization.managers.KillerManager$Actions: in.jvapps.disable_battery_optimization.managers.KillerManager$Actions[] values()
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType[] values()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: void stop()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: void onDrawRect(android.graphics.Canvas,android.graphics.Paint)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
me.zhanghai.android.materialprogressbar.Interpolators$LINEAR: Interpolators$LINEAR()
com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult: com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult valueOf(java.lang.String)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setAlpha(int)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: SingleHorizontalProgressDrawable(android.content.Context)
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: void onPreparePaint(android.graphics.Paint)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
in.jvapps.disable_battery_optimization.utils.Manufacturer: in.jvapps.disable_battery_optimization.utils.Manufacturer[] values()
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
de.mintware.barcode_scan.ZXingAutofocusScannerView: void setupCameraPreview(me.dm7.barcodescanner.core.CameraWrapper)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: void calculateXYValues(android.graphics.Path,float[],float[])
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
androidx.core.os.CancellationSignal$Api16Impl: android.os.CancellationSignal createCancellationSignal()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
androidx.cardview.widget.CardView: float getRadius()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setShowProgressBackground(boolean)
androidx.window.layout.WindowMetricsCalculator$-CC: void reset()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: boolean getShowBackground()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeatNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.dexterous.flutterlocalnotifications.ActionBroadcastReceiver: ActionBroadcastReceiver()
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
androidx.core.os.TraceCompat$Api18Impl: void endSection()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describeIcon(androidx.core.graphics.drawable.IconCompat)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applySecondaryProgressTint()
com.dexterous.flutterlocalnotifications.NotificationStyle: NotificationStyle(java.lang.String,int)
me.zhanghai.android.materialprogressbar.Animators: Animators()
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: DateTimeComponents(java.lang.String,int)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
com.google.android.material.chip.Chip: float getChipIconSize()
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.google.i18n.phonenumbers.NumberParseException$ErrorType: com.google.i18n.phonenumbers.NumberParseException$ErrorType valueOf(java.lang.String)
androidx.cardview.widget.CardView: float getCardElevation()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: void onDrawRing(android.graphics.Canvas,android.graphics.Paint)
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.google.android.material.button.MaterialButton: int getInsetBottom()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.net.Uri retrieveSoundResourceUri(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.models.SoundSource)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: ObjectAnimatorCompat()
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
me.zhanghai.android.materialprogressbar.BaseDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSound(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setTint(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
me.zhanghai.android.materialprogressbar.R$dimen: R$dimen()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getCallbackHandle(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
androidx.window.layout.WindowMetrics: int hashCode()
androidx.constraintlayout.motion.widget.MotionLayout: void setInterpolatedProgress(float)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: BooleanUtils()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.google.android.material.chip.Chip: float getTextStartPadding()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
androidx.constraintlayout.motion.widget.MotionLayout: void setOnShow(float)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.internal.BaselineLayout: int getBaseline()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(android.graphics.Path)
androidx.core.app.AlarmManagerCompat$Api23Impl: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void drawRing(android.graphics.Canvas,android.graphics.Paint)
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.Person buildPerson(android.content.Context,com.dexterous.flutterlocalnotifications.models.PersonDetails)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
androidx.window.core.Bounds: int hashCode()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyIndeterminateTint()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean isValidDrawableResource(android.content.Context,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNextRepeatingNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
io.flutter.plugins.firebase.messaging.JobIntentService: JobIntentService()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: void setTrimPathStart(float)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: BigTextStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean)
androidx.appcompat.widget.SearchView: int getMaxWidth()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.dexterous.flutterlocalnotifications.models.IconSource: IconSource(java.lang.String,int)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
com.google.android.material.chip.Chip: float getCloseIconSize()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.R$attr: R$attr()
com.dexterous.flutterlocalnotifications.models.Time: Time()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.ArrayList loadScheduledNotifications(android.content.Context)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
me.zhanghai.android.materialprogressbar.R$color: R$color()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: boolean isStarted()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.google.android.material.button.MaterialButton: int getIconGravity()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
me.dm7.barcodescanner.core.BarcodeScannerView: void setSquareViewFinder(boolean)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
me.dm7.barcodescanner.core.BarcodeScannerView: void setFlash(boolean)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
me.zhanghai.android.materialprogressbar.BaseProgressDrawable: boolean getUseIntrinsicPadding()
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: boolean getValue(java.lang.Boolean)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.google.android.material.button.MaterialButton: void setChecked(boolean)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setTint(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void show(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
androidx.constraintlayout.motion.widget.MotionLayout: long getTransitionTimeMs()
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: void setTint(int)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
me.zhanghai.android.materialprogressbar.R: R()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.core.text.TextUtilsCompat$Api17Impl: int getLayoutDirectionFromLocale(java.util.Locale)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
kotlin.jvm.internal.FunctionReference: int getArity()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.SharedValues getSharedValues()
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type[] values()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.window.embedding.SplitPairRule: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.app.RemoteInput$Api16Impl: android.content.ClipData getClipData(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
me.dm7.barcodescanner.zxing.ZXingScannerView: void setFormats(java.util.List)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
me.dm7.barcodescanner.core.CameraPreview: int getDisplayOrientation()
me.zhanghai.android.materialprogressbar.BaseDrawable: void setAlpha(int)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setProgress(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
xyz.luan.audioplayers.ReleaseMode: xyz.luan.audioplayers.ReleaseMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: MaterialProgressBar(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: float getRadius()
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] values()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
me.dm7.barcodescanner.core.ViewFinderView: void setBorderStrokeWidth(int)
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void startForegroundService(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
de.mintware.barcode_scan.Protos$BarcodeFormat: de.mintware.barcode_scan.Protos$BarcodeFormat[] values()
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
androidx.window.embedding.ActivityStack: int hashCode()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
androidx.window.embedding.ActivityRule: int hashCode()
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void fixCanvasScalingAndColorFilterWhenHardwareAccelerated()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.google.android.material.chip.Chip: void setChipIconSize(float)
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.google.android.material.chip.Chip: float getChipEndPadding()
me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable: void setUseIntrinsicPadding(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation getDefaultStyleInformation(java.util.Map)
me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminate(java.lang.Object)
androidx.window.core.Bounds: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedId(int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setIndeterminateTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setMaxImageSize(int)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax[] values()
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable: boolean getShowBackground()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails readPersonDetails(java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
androidx.cardview.widget.CardView: void setRadius(float)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: void setShowBackground(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setIndeterminate(boolean)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: void setShowBackground(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.google.android.material.button.MaterialButtonToggleGroup: java.lang.CharSequence getAccessibilityClassName()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
io.flutter.plugins.imagepicker.ImagePickerCache$CacheType: io.flutter.plugins.imagepicker.ImagePickerCache$CacheType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLargeIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
me.zhanghai.android.materialprogressbar.BaseDrawable: boolean onStateChange(int[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setupNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: void setShowBackground(boolean)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
de.belitzo.driver.BackgroundService: BackgroundService()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
com.google.protobuf.FieldType: com.google.protobuf.FieldType[] values()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: MaterialProgressBar(android.content.Context,android.util.AttributeSet,int,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.HashMap getMappedNotificationChannel(android.app.NotificationChannel)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: void setShowBackground(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
androidx.fragment.app.DialogFragment: DialogFragment()
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
androidx.core.widget.NestedScrollView: int getScrollRange()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: NotificationChannelAction(java.lang.String,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: int getIntrinsicHeight()
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
androidx.lifecycle.ViewModel: ViewModel()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] values()
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.ColorFilter getColorFilterForDrawing()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVibrationPattern(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setLights(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void stopForegroundService(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: void setUseIntrinsicPadding(boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.R$styleable: R$styleable()
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X: Interpolators$INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X()
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: void start()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
me.dm7.barcodescanner.core.ViewFinderView: android.graphics.Rect getFramingRect()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readPlatformSpecifics(java.util.Map,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: void setTintList(android.content.res.ColorStateList)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class)
androidx.window.core.Version$Companion: Version$Companion()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
com.google.android.material.chip.Chip: void setChipEndPadding(float)
me.zhanghai.android.materialprogressbar.BaseDrawable: void setTint(int)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
com.dexterous.flutterlocalnotifications.models.PersonDetails: PersonDetails(java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.google.android.material.chip.Chip: void setBackgroundColor(int)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation: IndeterminateCircularProgressDrawable$RingRotation(me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$1)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVisibility(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
me.dm7.barcodescanner.core.BarcodeScannerView: void setBorderColor(int)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.constraintlayout.motion.widget.MotionLayout: int[] getConstraintSetIds()
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
kotlin.jvm.internal.CallableReference: CallableReference()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
me.zhanghai.android.materialprogressbar.R$style: R$style()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.constraintlayout.widget.Barrier: int getType()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigPictureStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.constraintlayout.widget.Barrier: boolean getAllowsGoneWidget()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult: com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult[] values()
androidx.window.java.R: R()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource[] values()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
com.afollestad.materialdialogs.internal.MDRootLayout: void setButtonStackedGravity(com.afollestad.materialdialogs.GravityEnum)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType[] values()
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.dexterous.flutterlocalnotifications.utils.StringUtils: StringUtils()
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.constraintlayout.motion.widget.MotionLayout: float getVelocity()
com.afollestad.materialdialogs.color.FillGridView: FillGridView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.google.android.material.button.MaterialButton: int getIconSize()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation: float access$200(me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
androidx.constraintlayout.motion.widget.MotionLayout: void setScene(androidx.constraintlayout.motion.widget.MotionScene)
me.zhanghai.android.materialprogressbar.internal.ThemeUtils: float getFloatFromAttrRes(int,float,android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void onAttachedToWindow()
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType valueOf(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.window.core.Bounds: int getHeight()
me.zhanghai.android.materialprogressbar.internal.ThemeUtils: ThemeUtils()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.constraintlayout.motion.widget.MotionLayout: void setStartState(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean sendNotificationPayloadMessage(android.content.Intent)
com.google.android.material.chip.Chip: void setMaxWidth(int)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.window.embedding.SplitInfo: float getSplitRatio()
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.afollestad.materialdialogs.internal.MDRootLayout: MDRootLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
kotlin.jvm.internal.CallableReference: boolean isOpen()
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable: HorizontalProgressBackgroundDrawable(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.window.layout.WindowInfoTracker$Companion: void reset()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.card.MaterialCardView: void setProgress(float)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type[] values()
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean getShowBackground()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.window.core.Version: int getPatch()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.dexterous.flutterlocalnotifications.RepeatInterval: RepeatInterval(java.lang.String,int)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyProgressBackgroundTint()
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.FirebaseInstanceId getInstance(com.google.firebase.FirebaseApp)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
me.zhanghai.android.materialprogressbar.BasePaintDrawable: BasePaintDrawable()
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.baseflow.geolocator.GeolocatorLocationService: GeolocatorLocationService()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void start()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map extractNotificationResponseMap(android.content.Intent)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
kotlin.jvm.internal.Lambda: int getArity()
androidx.window.embedding.SplitPairFilter: int hashCode()
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
me.dm7.barcodescanner.core.ViewFinderView: void setLaserColor(int)
me.dm7.barcodescanner.core.ViewFinderView: void setViewFinderOffset(int)
com.google.android.gms.maps.GoogleMapOptions: GoogleMapOptions()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getSecondaryProgressTintList()
io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice: io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice[] values()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigTextStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation: void setRotation(float)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] values()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.afollestad.materialdialogs.internal.MDRootLayout: void setDividerColor(int)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.cardview.widget.CardView: float getMaxCardElevation()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
androidx.constraintlayout.motion.widget.MotionLayout: float getTargetPosition()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: MaterialProgressBar(android.content.Context)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: android.graphics.ColorFilter getColorFilter()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
de.mintware.barcode_scan.Protos$BarcodeFormat: de.mintware.barcode_scan.Protos$BarcodeFormat valueOf(java.lang.String)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X: Interpolators$INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X()
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: CircularProgressDrawable(int,android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: boolean getShowBackground()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotifications(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
me.zhanghai.android.materialprogressbar.BaseDrawable: void setTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.window.core.Version: java.lang.String toString()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
me.zhanghai.android.materialprogressbar.BaseDrawable: void onDraw(android.graphics.Canvas,int,int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] values()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.core.app.BundleCompat$Api18Impl: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void drawBackgroundRect(android.graphics.Canvas,android.graphics.Paint)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelNotification(java.lang.Integer,java.lang.String)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: boolean getUseIntrinsicPadding()
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
me.zhanghai.android.materialprogressbar.BaseDrawable: int getOpacity()
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.window.embedding.SplitInfo: java.lang.String toString()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivity()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSmallIcon(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.window.layout.WindowInfoTracker$-CC: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: BaseProgressLayerDrawable(android.graphics.drawable.Drawable[],android.content.Context)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
de.mintware.barcode_scan.ChannelHandler: void requestCameraPermission(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
me.dm7.barcodescanner.core.BarcodeScannerView: void setupCameraPreview(me.dm7.barcodescanner.core.CameraWrapper)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: IndeterminateCircularProgressDrawable$RingPathTransform()
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setColorFilter(android.graphics.ColorFilter)
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState: android.graphics.drawable.Drawable newDrawable()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getProgressBackgroundTintMode()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Integer tryParseInt(java.lang.String)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.google.android.material.chip.Chip: void setTextAppearance(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
kotlin.jvm.internal.CallableReference: boolean isSuspend()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
com.afollestad.materialdialogs.internal.MDRootLayout: void setButtonGravity(com.afollestad.materialdialogs.GravityEnum)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: BigPictureStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Boolean)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: int getStrokeColor()
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] values()
androidx.window.core.Bounds: int getTop()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDateMatchingDateTimeComponents(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: byte[] castObjectToByteArray(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency valueOf(java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLedDetails(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: boolean isStateful()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
me.zhanghai.android.materialprogressbar.R$layout: R$layout()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
me.zhanghai.android.materialprogressbar.R$drawable: R$drawable()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void init(android.util.AttributeSet,int,int)
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
androidx.window.layout.WindowMetrics: java.lang.String toString()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.dm7.barcodescanner.core.ViewFinderView: void setSquareViewFinder(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
io.flutter.plugins.imagepicker.Messages$CacheRetrievalType: io.flutter.plugins.imagepicker.Messages$CacheRetrievalType valueOf(java.lang.String)
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer valueOf(java.lang.String)
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection[] values()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
com.google.android.material.chip.Chip: float getTextEndPadding()
me.zhanghai.android.materialprogressbar.BaseDrawable: void draw(android.graphics.Canvas)
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: HorizontalProgressDrawable(android.content.Context)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
androidx.cardview.widget.CardView: int getContentPaddingRight()
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: void drawRing(android.graphics.Canvas,android.graphics.Paint,float,float)
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class access$100(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int getDrawableResourceId(android.content.Context,java.lang.String)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.afollestad.materialdialogs.StackingBehavior: com.afollestad.materialdialogs.StackingBehavior valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setProgressBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
androidx.constraintlayout.motion.widget.MotionLayout: void setTransition(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readGroupingInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask[] values()
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType: com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
androidx.window.embedding.SplitInfo: int hashCode()
androidx.constraintlayout.motion.widget.MotionLayout: void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState)
androidx.constraintlayout.motion.widget.MotionLayout: int getEndState()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int getIntrinsicWidth()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: void setTrimPathOffset(float)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLargeIconInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
io.flutter.plugins.imagepicker.Messages$CacheRetrievalType: io.flutter.plugins.imagepicker.Messages$CacheRetrievalType[] values()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
de.mintware.barcode_scan.BarcodeScannerActivity: BarcodeScannerActivity()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
me.zhanghai.android.materialprogressbar.TintableDrawable: void setTintList(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: void setTranslateX(float)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
androidx.cardview.widget.CardView: void setCardElevation(float)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.text.Spanned fromHtml(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: void draw(android.graphics.Canvas)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.google.firebase.iid.Registrar: com.google.firebase.iid.internal.FirebaseInstanceIdInternal lambda$getComponents$1$Registrar(com.google.firebase.components.ComponentContainer)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: FlutterFirebaseMessagingInitProvider()
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect1(java.lang.Object)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.android.material.internal.FlowLayout: int getRowCount()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.google.android.material.button.MaterialButton: void setIconGravity(int)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax valueOf(java.lang.String)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
de.mintware.barcode_scan.Protos$ResultType: de.mintware.barcode_scan.Protos$ResultType[] values()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
me.dm7.barcodescanner.core.BarcodeScannerView: void setupLayout(me.dm7.barcodescanner.core.CameraWrapper)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidBigPictureResources(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getIndeterminateTintList()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
de.mintware.barcode_scan.ChannelHandler: void numberOfCameras(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: void setUseIntrinsicPadding(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
me.zhanghai.android.materialprogressbar.ShowBackgroundDrawable: void setShowBackground(boolean)
com.dexterous.flutterlocalnotifications.models.MessageDetails: MessageDetails(java.lang.String,java.lang.Long,com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void requestPermission(com.dexterous.flutterlocalnotifications.PermissionRequestListener)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.constraintlayout.widget.Barrier: int getMargin()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder[] values()
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyPrimaryProgressTint()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSecondaryProgressTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: boolean getShowBackground()
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails fromNotificationDetails(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy[] values()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
androidx.appcompat.widget.SearchView: int getImeOptions()
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean onLevelChange(int)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.google.android.material.chip.Chip: void setLines(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMediaStyle(androidx.core.app.NotificationCompat$Builder)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLedInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void schedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.common.api.PendingResult: PendingResult()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotificationMessagingStyle(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: MessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean,java.lang.Boolean)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readMessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.window.layout.WindowInfoTracker$-CC: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
me.dm7.barcodescanner.core.BarcodeScannerView: void setBorderAlpha(float)
me.dm7.barcodescanner.core.ViewFinderView: void setBorderCornerRounded(boolean)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationAppLaunchDetails(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
me.zhanghai.android.materialprogressbar.internal.DrawableCompat: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: void setScaleX(float)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: boolean getShowBackground()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: ObjectAnimatorCompatLollipop()
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: boolean isRunning()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int getAlpha()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
me.dm7.barcodescanner.zxing.ZXingScannerView: java.util.Collection getFormats()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int getOpacity()
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
me.zhanghai.android.materialprogressbar.internal.ThemeUtils: int getColorFromAttrRes(int,int,android.content.Context)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
me.dm7.barcodescanner.core.ViewFinderView: void setMaskColor(int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.afollestad.materialdialogs.internal.MDButton: void setStackedGravity(com.afollestad.materialdialogs.GravityEnum)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getProgressTintList()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
